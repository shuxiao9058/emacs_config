;; Object emacs-jedi/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "emacs-jedi/"
  :tables
  (list
    (semanticdb-table "Makefile"
      :major-mode 'makefile-gmake-mode
      :tags 
        '( ("ENV" variable (:default-value ("env")) nil [1 11])
            ("VIRTUALENV" variable (:default-value ("VIRTUALENV_SYSTEM_SITE_PACKAGES=$(VIRTUALENV_SYSTEM_SITE_PACKAGES)" "virtualenv" "--python=$(PYTHON)")) nil [52 169])
            ("PIP_INSTALL" variable (:default-value ("$(ENV)/bin/pip" "install" "--use-mirrors")) nil [169 220])
            ("JEDI_DEV_URL" variable (:default-value ("https://github.com/davidhalter/jedi/archive/dev.zip")) nil [220 287])
            ("EL4T_SCRIPT" variable (:default-value ("tools/el4t/emacs.sh")) nil [339 373])
            ("EL4T_CARTON" variable (:default-value ("EL4T_EMACS=${EMACS}" "EMACS=${EL4T_SCRIPT}" "${CARTON}")) nil [373 438])
            ("EL4T_CARTON_EMACS" variable (:default-value ("${EL4T_CARTON}" "exec" "${EL4T_SCRIPT}")) nil [438 493])
            (".PHONY" function (:arguments ("test" "test-1" "tryout" "clean-elpa" "requirements" "env" "clean-env" "clean" "print-deps" "travis-ci" "doc")) nil [494 594])
            ("test" function (:arguments ("elpa" "requirements")) nil [595 635])
            ("test-1" function nil nil [636 798])
            ("compile" function (:arguments ("elpa" "clean-elc")) nil [799 891])
            ("clean-elc" function nil nil [892 917])
            ("tryout" function (:arguments ("compile" "requirements")) nil [918 995])
            ("doc" function (:arguments ("elpa")) nil [996 1024])
            ("${EL4T_SCRIPT}" function (:arguments ("ensure-git")) nil [1025 1081])
            ("ensure-git" function nil nil [1082 1163])
            ("elpa" function (:arguments ("${EL4T_SCRIPT}")) nil [1164 1244])
            ("clean-elpa" function nil nil [1245 1270])
            ("requirements" function (:arguments ("env")) nil [1271 1336])
            ("install-jedi-dev" function nil nil [1337 1397])
            ("env" function (:arguments ("$(ENV)/bin/activate")) nil [1398 1423])
            ("$(ENV)" function nil nil [1423 1466])
            ("clean-env" function nil nil [1467 1493])
            ("clean-el" function (:arguments ("clean-elpa" "clean-elc")) nil [1494 1525])
            ("clean" function (:arguments ("clean-env" "clean-el")) nil [1525 1551])
            ("print-deps" function (:arguments ("elpa" "requirements")) nil [1552 1862])
            ("before-test" function (:arguments ("requirements")) nil [1863 1903])
            ("travis-ci" function (:arguments ("print-deps" "test")) nil [1904 1931])
            ("JOBS" variable (:default-value ("$(addprefix job-,${EL4T_EMACS_LIST})")) nil [2300 2345])
            (".PHONY" function (:arguments ("${JOBS}")) nil [2345 2361])
            ("${JOBS}" function (:arguments ("job-%:")) nil [2362 2457])
            ("test-all" function (:arguments ("requirements" "${JOBS}")) nil [2458 2489])
            ("PACKAGE" variable (:default-value ("jedi")) nil [2622 2637])
            ("VERSION" variable (:default-value ("$(shell grep ';; Version:' jedi.el | sed 's/^.* \\([0-9].*\\)$$/\\1/')")) nil [2637 2715])
            ("DIST_FILES" variable (:default-value ("jedi-pkg.el" "jedi.el" "jediepcserver.py" "requirements.txt" "Makefile" "tryout-jedi.el")) nil [2715 2809])
            (".PHONY" function (:arguments ("dist" "${PACKAGE}-${VERSION}.tar.gz" "${PACKAGE}-${VERSION}" "clean-dist" "clean-dist-all")) nil [2810 2903])
            ("dist" function (:arguments ("clean-dist")) nil [2904 2937])
            ("dist-1" function (:arguments ("dist/${PACKAGE}-${VERSION}.tar" "dist/${PACKAGE}-${VERSION}.tar.gz")) nil [2938 3011])
            ("dist/" function (:arguments ("${PACKAGE}-${VERSION}.tar")) nil [3012 3070])
            ("${PACKAGE}" function (:arguments ("${PACKAGE}-${VERSION}")) nil [3070 3157])
            ("dist/" function (:arguments ("${PACKAGE}-${VERSION}.tar.gz")) nil [3158 3222])
            ("${PACKAGE}" function (:arguments ("${PACKAGE}-${VERSION}")) nil [3222 3313])
            ("${PACKAGE}" function (:arguments ("dist/${PACKAGE}-${VERSION}")) nil [3314 3364])
            ("dist/" function nil nil [3364 3429])
            ("clean-dist" function nil nil [3430 3478])
            ("clean-dist-all" function nil nil [3479 3508])
            ("PACKAGE_USER_DIR" variable nil nil [3537 3556])
            ("TEST_PACKAGE_DIR" variable (:default-value ("dist/test")) nil [3556 3585])
            ("install-dist" function nil nil [3586 3980])
            ("test-install" function (:arguments ("dist/${PACKAGE}-${VERSION}.tar")) nil [3981 4143])
            ("test-install-requirement" function (:arguments ("test-install")) nil [4144 4263])
            ("MAKE_GH_PAGES" variable (:default-value ("$(MAKE)" "--directory" "doc" "--file" "gh-pages.mk")) nil [4280 4339])
            ("gh-pages-latest" function nil nil [4340 4375])
            ("gh-pages-released" function nil nil [4491 4634]))          
      :file "Makefile"
      :pointmax 4633
      :fsize 4633
      :lastmodtime '(20910 63269 107885 215000)
      :unmatched-syntax nil))
  :file "!home!jiya!Downloads!emacs-jedi!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")

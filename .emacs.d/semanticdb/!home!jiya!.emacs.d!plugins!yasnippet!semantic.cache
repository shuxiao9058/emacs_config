;; Object yasnippet/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "yasnippet/"
  :tables
  (list
    (semanticdb-table "yasnippet.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [5011 5024])
            ("easymenu" include nil nil [5025 5044])
            ("help-mode" include nil nil [5045 5065])
            ("yas-verbosity" variable nil nil [5277 5299])
            ("yas-selected-text" variable nil nil [5248 5274])
            ("yas-keymap" variable nil nil [5226 5245])
            ("yas--scheduled-jit-loads" variable nil nil [5190 5223])
            ("yas--indent-original-column" variable nil nil [5151 5187])
            ("yas--guessed-modes" variable nil nil [5121 5148])
            ("yas--editing-template" variable nil nil [5088 5118])
            ("yasnippet" customgroup (:user-visible-flag t) nil [5338 5414])
            ("yas--load-file-name" variable (:default-value load-file-name) nil [5416 5528])
            ("yas-snippet-dirs" variable (:default-value (remove nil (list "~/.emacs.d/snippets" (when yas--load-file-name (concat (file-name-directory yas--load-file-name) "snippets"))))) nil [5530 6699])
            ("yas-snippet-dirs" function nil nil [6701 6855])
            ("defvaralias" code nil nil [6857 6908])
            ("yas-prompt-functions" variable (:default-value (quote (yas-x-prompt yas-dropdown-prompt yas-completing-prompt yas-ido-prompt yas-no-prompt))) nil [6910 7912])
            ("yas-indent-line" variable (:default-value (quote auto)) nil [7914 8473])
            ("yas-also-auto-indent-first-line" variable nil nil [8475 8687])
            ("yas-snippet-revival" variable (:default-value t) nil [8689 8821])
            ("yas-triggers-in-field" variable nil nil [8823 9042])
            ("yas-fallback-behavior" variable (:default-value (quote call-other-command)) nil [9044 9711])
            ("yas-choose-keys-first" variable nil nil [9713 9968])
            ("yas-choose-tables-first" variable nil nil [9970 10270])
            ("yas-use-menu" variable (:default-value (quote abbreviate)) nil [10272 10935])
            ("yas-trigger-symbol" variable (:default-value (or (and (eq window-system (quote mac)) (ignore-errors (char-to-string 8677))) " =>")) nil [10937 11283])
            ("yas-wrap-around-region" variable nil nil [11285 11532])
            ("yas-good-grace" variable (:default-value t) nil [11534 11716])
            ("yas-visit-from-menu" variable nil nil [11718 11923])
            ("yas-expand-only-for-last-commands" variable nil nil [11925 12461])
            ("yas-field-highlight-face" variable
               (:default-value (quote ((t (:inherit (quote region)))))
                :type "face")
                nil [12527 12680])
            ("yas--field-debug-face" variable
               (:default-value (quote nil)
                :type "face")
                nil [12682 12801])
            ("yas-keymap" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map [(tab)] (quote yas-next-field-or-maybe-expand)) (define-key map (kbd "TAB") (quote yas-next-field-or-maybe-expand)) (define-key map [(shift tab)] (quote yas-prev-field)) (define-key map [backtab] (quote yas-prev-field)) (define-key map (kbd "C-g") (quote yas-abort-snippet)) (define-key map (kbd "C-d") (quote yas-skip-and-clear-or-delete-char)) map)) nil [12833 13446])
            ("yas-key-syntaxes" variable (:default-value (list "w" "w_" "w_." "w_.()" "^ ")) nil [13448 14056])
            ("yas-after-exit-snippet-hook" variable (:default-value (quote nil)) nil [14058 14412])
            ("yas-before-expand-snippet-hook" variable (:default-value (quote nil)) nil [14414 14509])
            ("yas-buffer-local-condition" variable (:default-value (quote (if (and (or (fourth (syntax-ppss)) (fifth (syntax-ppss))) this-command (eq this-command (quote yas-expand-from-trigger-key))) (quote (require-snippet-condition . force-in-comment)) t))) nil [14511 16519])
            ("yas--version" variable (:default-value "0.8.0beta") nil [16547 16580])
            ("yas--menu-table" variable (:default-value (make-hash-table)) nil [16582 16680])
            ("yas--known-modes" variable (:default-value (quote (ruby-mode rst-mode markdown-mode))) nil [16682 16807])
            ("yas--escaped-characters" variable (:default-value (quote (92 96 34 39 36 125 123 40 41))) nil [16809 16934])
            ("yas--field-regexp" variable
               (:constant-flag t
                :default-value "${\\([0-9]+:\\)?\\([^}]*\\)}")
                nil [16936 17041])
            ("yas--multi-dollar-lisp-expression-regexp" variable
               (:constant-flag t
                :default-value "$+[ 	
]*\\(([^)]*)\\)")
                nil [17043 17182])
            ("yas--backquote-lisp-expression-regexp" variable
               (:constant-flag t
                :default-value "`\\([^`]*\\)`")
                nil [17184 17313])
            ("yas--transform-mirror-regexp" variable
               (:constant-flag t
                :default-value "${\\(?:\\([0-9]+\\):\\)?$\\([ 	
]*([^}]*\\)")
                nil [17315 17466])
            ("yas--simple-mirror-regexp" variable
               (:constant-flag t
                :default-value "$\\([0-9]+\\)")
                nil [17468 17565])
            ("yas--snippet-id-seed" variable nil nil [17567 17638])
            ("yas--snippet-next-id" function nil nil [17640 17746])
            ("last-buffer-undo-list" variable nil nil [17849 17883])
            ("yas--minor-mode-menu" variable nil nil [17885 17948])
            ("yas--init-minor-keymap" function nil nil [17950 24007])
            ("yas-minor-mode-map" variable (:default-value (yas--init-minor-keymap)) nil [24009 24114])
            ("yas--tables" variable (:default-value (make-hash-table)) nil [24116 24212])
            ("yas--parents" variable (:default-value (make-hash-table)) nil [24214 24606])
            ("yas--ancestors" variable (:default-value (make-hash-table)) nil [24608 24758])
            ("yas--direct-keymaps" variable (:default-value (list)) nil [24760 25266])
            ("yas-direct-keymaps-reload" function (:user-visible-flag t) nil [25268 25648])
            ("yas--modes-to-activate" function nil nil [25650 26186])
            ("yas-minor-mode-hook" variable nil nil [26188 26269])
            ("define-minor-mode" code nil nil [26286 27811])
            ("yas-dont-activate" variable (:default-value (quote (minibufferp))) nil [27813 28536])
            ("unless" code nil nil [28537 28622])
            ("yas-minor-mode-on" function (:user-visible-flag t) nil [28625 29024])
            ("define-globalized-minor-mode" code nil nil [29041 29162])
            ("yas--global-mode-reload-with-jit-maybe" function nil nil [29164 29310])
            ("add-hook" code nil nil [29312 29384])
            ("yas--font-lock-keywords" variable (:default-value (append (quote (("^#.*$" . font-lock-comment-face))) lisp-font-lock-keywords lisp-font-lock-keywords-1 lisp-font-lock-keywords-2 (quote (("$\\([0-9]+\\)" (0 font-lock-keyword-face) (1 font-lock-string-face t)) ("${\\([0-9]+\\):?" (0 font-lock-keyword-face) (1 font-lock-warning-face t)) ("${" font-lock-keyword-face) ("$[0-9]+?" font-lock-preprocessor-face) ("\\(\\$(\\)" 1 font-lock-preprocessor-face) ("}" (0 font-lock-keyword-face)))))) nil [29410 30034])
            ("yas--init-major-keymap" function nil nil [30036 30662])
            ("snippet-mode-map" variable (:default-value (yas--init-major-keymap)) nil [30664 30767])
            ("define-derived-mode" code nil nil [30770 31080])
            ("yas--template" type
               (:members ("key" "content" "name" "condition" "expand-env" "file" "keybinding" "uuid" "menu-binding-pair" "group" "perm-group" "table")
                :type "struct")
                nil [31131 31456])
            ("yas--populate-template" function (:arguments ("template" "args")) nil [31458 31836])
            ("yas--table" type
               (:members ("name" "hash" "uuidhash" "parents" "direct-keymap")
                :type "struct")
                nil [31838 33036])
            ("yas--get-template-by-uuid" function (:arguments ("mode" "uuid")) nil [33038 33251])
            ("yas--remove-template-by-uuid" function (:arguments ("table" "uuid")) nil [35118 36260])
            ("yas--add-template" function (:arguments ("table" "template")) nil [36262 37231])
            ("yas--update-template" function (:arguments ("table" "template")) nil [37233 37651])
            ("yas--update-template-menu" function (:arguments ("table" "template")) nil [37653 39601])
            ("yas--namehash-templates-alist" function (:arguments ("namehash")) nil [39603 39804])
            ("yas--fetch" function (:arguments ("table" "key")) nil [39806 40187])
            ("yas--eval-condition" function (:arguments ("condition")) nil [40222 40521])
            ("yas--filter-templates-by-condition" function (:arguments ("templates")) nil [40524 41185])
            ("yas--require-template-specific-condition-p" function nil nil [41187 41901])
            ("yas--template-can-expand-p" function (:arguments ("condition" "requirement")) nil [41903 42218])
            ("yas--all-parents" function (:arguments ("mode")) nil [42220 43014])
            ("yas--table-templates" function (:arguments ("table")) nil [43016 43377])
            ("yas--current-key" function nil nil [43379 44170])
            ("yas--table-all-keys" function (:arguments ("table")) nil [44173 44499])
            ("yas--table-mode" function (:arguments ("table")) nil [44501 44567])
            ("yas--real-mode?" function (:arguments ("mode")) nil [44607 44994])
            ("yas--eval-lisp" function (:arguments ("form")) nil [44996 45872])
            ("yas--eval-lisp-no-saves" function (:arguments ("form")) nil [45874 46167])
            ("yas--read-lisp" function (:arguments ("string" "nil-on-error")) nil [46169 46537])
            ("yas--read-keybinding" function (:arguments ("keybinding")) nil [46539 47097])
            ("yas-extra-modes" variable nil nil [47099 47341])
            ("yas-extra-modes" function nil nil [47342 47438])
            ("defvaralias" code nil nil [47439 47486])
            ("yas--table-get-create" function (:arguments ("mode")) nil [47488 47927])
            ("yas--get-snippet-tables" function nil nil [47929 48271])
            ("yas--menu-keymap-get-create" function (:arguments ("mode" "parents")) nil [48273 48854])
            ("yas--called-interactively-p" function (:arguments ("kind")) nil [48857 49170])
            ("yas--call-with-temporary-redefinitions" function (:arguments ("function" "function-names-and-overriding-functions")) nil [49173 50227])
            ("yas--with-temporary-redefinitions" function (:arguments ("fdefinitions" "body")) nil [50230 50803])
            ("put" code nil nil [50805 50869])
            ("put" code nil nil [50870 50969])
            ("yas--parse-template" function (:arguments ("file")) nil [51025 54131])
            ("yas--calculate-group" function (:arguments ("file")) nil [54133 55001])
            ("yas--subdirs" function (:arguments ("directory" "filep")) nil [55003 55626])
            ("yas--make-menu-binding" function (:arguments ("template")) nil [55628 55837])
            ("yas--expand-or-visit-from-menu" function (:arguments ("mode" "uuid")) nil [55839 56582])
            ("yas--x-pretty-prompt-templates" variable nil nil [56625 56731])
            ("yas--prompt-for-template" function (:arguments ("templates" "prompt")) nil [56734 57472])
            ("yas--prompt-for-keys" function (:arguments ("keys" "prompt")) nil [57474 57768])
            ("yas--prompt-for-table" function (:arguments ("tables" "prompt")) nil [57770 58132])
            ("yas-x-prompt" function (:arguments ("prompt" "choices" "display-fn")) nil [58134 59453])
            ("yas--x-pretty-prompt-templates" function (:arguments ("prompt" "templates")) nil [59455 60812])
            ("yas-ido-prompt" function (:arguments ("prompt" "choices" "display-fn")) nil [60814 61047])
            ("declare-function" code nil nil [61049 61097])
            ("yas-dropdown-prompt" function (:arguments ("prompt" "choices" "display-fn")) nil [61098 61658])
            ("yas-completing-prompt" function (:arguments ("prompt" "choices" "display-fn" "completion-fn")) nil [61660 62609])
            ("yas-no-prompt" function (:arguments ("prompt" "choices" "display-fn")) nil [62611 62688])
            ("yas--define-snippets-1" function (:arguments ("snippet" "snippet-table")) nil [62813 64389])
            ("yas-define-snippets" function (:arguments ("mode" "snippets")) nil [64391 65475])
            ("yas--load-yas-setup-file" function (:arguments ("file")) nil [65512 65574])
            ("yas--define-parents" function (:arguments ("mode" "parents")) nil [65576 65813])
            ("yas-load-directory" function
               (:user-visible-flag t
                :arguments ("top-level-dir" "use-jit"))
                nil [65815 67793])
            ("yas--load-directory-1" function (:arguments ("directory" "mode-sym" "parents" "no-compiled-snippets")) nil [67795 68347])
            ("yas--load-directory-2" function (:arguments ("directory" "mode-sym")) nil [68349 69154])
            ("yas--load-snippet-dirs" function (:arguments ("nojit")) nil [69156 69867])
            ("yas-reload-all" function
               (:user-visible-flag t
                :arguments ("interactive"))
                nil [69869 72268])
            ("yas--load-pending-jits" function nil nil [72270 72652])
            ("yas--quote-string" function (:arguments ("string")) nil [72763 73065])
            ("yas--initialize" function nil nil [73102 73216])
            ("yas-compile-directory" function
               (:user-visible-flag t
                :arguments ("top-level-dir"))
                nil [73218 75366])
            ("yas-recompile-all" function (:user-visible-flag t) nil [75368 75509])
            ("yas--scheduled-jit-loads" variable (:default-value (make-hash-table)) nil [75533 75664])
            ("yas--schedule-jit" function (:arguments ("mode" "form")) nil [75666 75836])
            ("yas-about" function nil nil [75872 76071])
            ("yas--template-menu-binding-pair-get-create" function (:arguments ("template" "type")) nil [77474 78176])
            ("yas--template-menu-managed-by-yas-define-menu" function (:arguments ("template")) nil [78177 78371])
            ("yas--show-menu-p" function (:arguments ("mode")) nil [78374 78696])
            ("yas--delete-from-keymap" function (:arguments ("keymap" "uuid")) nil [78698 79665])
            ("yas-define-menu" function (:arguments ("mode" "menu" "omit-items")) nil [79667 81202])
            ("yas--define-menu-1" function (:arguments ("table" "menu-keymap" "menu" "uuidhash" "group-list")) nil [81204 82700])
            ("yas--define" function (:arguments ("mode" "key" "template" "name" "condition" "group")) nil [82703 83178])
            ("yas-hippie-try-expand" function (:arguments ("first-time?")) nil [83180 83471])
            ("yas--condition-cache-timestamp" variable nil nil [83519 83562])
            ("yas-define-condition-cache" function (:arguments ("func" "doc" "body")) nil [83563 84593])
            ("defalias" code nil nil [84595 84646])
            ("yas-expand-from-trigger-key" function
               (:user-visible-flag t
                :arguments ("field"))
                nil [84647 85867])
            ("yas-expand-from-keymap" function (:user-visible-flag t) nil [85869 86673])
            ("yas--expand-or-prompt-for-template" function (:arguments ("templates" "start" "end")) nil [86675 87422])
            ("yas--fallback" function (:arguments ("from-trigger-key-p")) nil [87718 88915])
            ("yas--keybinding-beyond-yasnippet" function nil nil [88917 89178])
            ("yas--fallback-translate-input" function (:arguments ("keys")) nil [89180 90147])
            ("yas--all-templates" function (:arguments ("tables")) nil [90187 90924])
            ("yas-insert-snippet" function
               (:user-visible-flag t
                :arguments ("no-condition"))
                nil [90926 92231])
            ("yas-visit-snippet-file" function (:user-visible-flag t) nil [92233 92982])
            ("yas--visit-snippet-file-1" function (:arguments ("template")) nil [92984 94540])
            ("yas--guess-snippet-directories-1" function (:arguments ("table")) nil [94542 94841])
            ("yas--guess-snippet-directories" function (:arguments ("table")) nil [94843 95955])
            ("yas--make-directory-maybe" function (:arguments ("table-and-dirs" "main-table-string")) nil [95957 97067])
            ("yas-new-snippet" function
               (:user-visible-flag t
                :arguments ("no-template"))
                nil [97069 98020])
            ("yas--compute-major-mode-and-parents" function (:arguments ("file")) nil [98022 99696])
            ("yas--editing-template" variable nil nil [99698 99812])
            ("yas--current-template" variable nil nil [99814 99910])
            ("yas--guessed-modes" variable nil nil [99912 100007])
            ("yas--read-table" function nil nil [100009 100865])
            ("yas-load-snippet-buffer" function
               (:user-visible-flag t
                :arguments ("table" "interactive"))
                nil [100867 103889])
            ("yas-tryout-snippet" function
               (:user-visible-flag t
                :arguments ("debug"))
                nil [103891 105931])
            ("yas-active-keys" function nil nil [105933 106151])
            ("yas--template-fine-group" function (:arguments ("template")) nil [106153 106300])
            ("yas-describe-tables" function
               (:user-visible-flag t
                :arguments ("choose"))
                nil [106302 108695])
            ("yas--describe-pretty-table" function (:arguments ("table" "original-buffer")) nil [108697 111292])
            ("yas-modified-p" variable nil nil [111363 111456])
            ("yas-moving-away-p" variable nil nil [111458 111532])
            ("yas-text" variable nil nil [111534 111588])
            ("yas-substr" function (:arguments ("str" "pattern" "subexp")) nil [111590 111957])
            ("yas-choose-value" function (:arguments ("possibilities")) nil [111959 112540])
            ("yas-key-to-value" function (:arguments ("alist")) nil [112542 112784])
            ("yas-throw" function (:arguments ("text")) nil [112786 112916])
            ("yas-verify-value" function (:arguments ("possibilities")) nil [112918 113210])
            ("yas-field-value" function (:arguments ("number")) nil [113212 113547])
            ("yas-text" function nil nil [113549 113709])
            ("yas-selected-text" function nil nil [113711 113916])
            ("yas--get-field-once" function (:arguments ("number" "transform-fn")) nil [113918 114112])
            ("yas-default-from-field" function (:arguments ("number")) nil [114114 114208])
            ("yas-inside-string" function nil nil [114210 114385])
            ("yas-unimplemented" function (:arguments ("missing-feature")) nil [114387 114808])
            ("yas--active-field-overlay" variable nil nil [114856 114935])
            ("yas--field-protection-overlays" variable nil nil [114937 115031])
            ("yas--prefix" variable (:constant-flag t) nil [115033 115120])
            ("yas-selected-text" variable nil nil [115122 115215])
            ("yas--start-column" variable nil nil [115217 115299])
            ("make-variable-buffer-local" code nil nil [115301 115356])
            ("make-variable-buffer-local" code nil nil [115357 115417])
            ("put" code nil nil [115418 115469])
            ("put" code nil nil [115470 115526])
            ("yas--snippet" type
               (:members ("fields" "exit" "id" "control-overlay" "active-field" "previous-active-field" "force-exit")
                :type "struct")
                nil [115528 115879])
            ("yas--field" type
               (:members ("number" "start" "end" "parent-field" "mirrors" "transform" "modified-p" "next")
                :type "struct")
                nil [115881 116437])
            ("yas--mirror" type
               (:members ("start" "end" "transform" "parent-field" "next" "depth")
                :type "struct")
                nil [116440 116896])
            ("yas--exit" type
               (:members ("marker" "next")
                :type "struct")
                nil [116898 116976])
            ("yas--apply-transform" function (:arguments ("field-or-mirror" "field" "empty-on-nil-p")) nil [116978 118091])
            ("yas--replace-all" function (:arguments ("from" "to" "text")) nil [118093 118418])
            ("yas--snippet-find-field" function (:arguments ("snippet" "number")) nil [118420 118593])
            ("yas--snippet-sort-fields" function (:arguments ("snippet")) nil [118595 118816])
            ("yas--snippet-field-compare" function (:arguments ("field1" "field2")) nil [118818 119396])
            ("yas--field-probably-deleted-p" function (:arguments ("snippet" "field")) nil [119398 120113])
            ("yas--snippets-at-point" function (:arguments ("all-snippets")) nil [120115 120742])
            ("yas-next-field-or-maybe-expand" function (:user-visible-flag t) nil [120744 121191])
            ("yas-next-field" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [121193 122698])
            ("yas--place-overlays" function (:arguments ("snippet" "field")) nil [122700 122906])
            ("yas--move-to-field" function (:arguments ("snippet" "field")) nil [122908 123824])
            ("yas-prev-field" function (:user-visible-flag t) nil [123826 123953])
            ("yas-abort-snippet" function (:arguments ("snippet")) nil [123955 124169])
            ("yas-exit-snippet" function
               (:user-visible-flag t
                :arguments ("snippet"))
                nil [124171 124543])
            ("yas-exit-all-snippets" function (:user-visible-flag t) nil [124545 124772])
            ("yas--inhibit-overlay-hooks" function (:arguments ("body")) nil [124814 125006])
            ("yas-snippet-beg" variable nil nil [125008 125088])
            ("yas-snippet-end" variable nil nil [125089 125163])
            ("yas--commit-snippet" function (:arguments ("snippet")) nil [125165 126801])
            ("yas--safely-run-hooks" function (:arguments ("hook-var")) nil [126803 126982])
            ("yas--check-commit-snippet" function nil nil [126985 128478])
            ("yas--markers-to-points" function (:arguments ("snippet")) nil [128955 130321])
            ("yas--points-to-markers" function (:arguments ("snippet")) nil [130323 131484])
            ("yas--field-contains-point-p" function (:arguments ("field" "point")) nil [131486 131690])
            ("yas--field-text-for-display" function (:arguments ("field")) nil [131692 131861])
            ("yas--undo-in-progress" function nil nil [131863 132025])
            ("yas--make-control-overlay" function (:arguments ("snippet" "start" "end")) nil [132027 132485])
            ("yas-skip-and-clear-or-delete-char" function
               (:user-visible-flag t
                :arguments ("field"))
                nil [132487 133194])
            ("yas--skip-and-clear" function (:arguments ("field")) nil [133196 133640])
            ("yas--mark-this-and-children-modified" function (:arguments ("field")) nil [133642 134023])
            ("yas--make-move-active-field-overlay" function (:arguments ("snippet" "field")) nil [134025 135132])
            ("yas--inhibit-overlay-hooks" variable nil nil [135134 135255])
            ("yas--on-field-overlay-modification" function (:arguments ("overlay" "after?" "beg" "end" "length")) nil [135257 136461])
            ("yas--make-move-field-protection-overlays" function (:arguments ("snippet" "field")) nil [137212 138692])
            ("yas--protection-violation" variable nil nil [138694 138995])
            ("yas--on-protection-overlay-modification" function (:arguments ("overlay" "after?" "beg" "end" "length")) nil [138997 139403])
            ("add-to-list" code nil nil [139405 139468])
            ("yas-expand-snippet" function (:arguments ("content" "start" "end" "expand-env")) nil [140602 145479])
            ("yas--take-care-of-redo" function (:arguments ("beg" "end" "snippet")) nil [145481 145811])
            ("yas--snippet-revive" function (:arguments ("beg" "end" "snippet")) nil [145813 146860])
            ("yas--snippet-create" function (:arguments ("begin" "end")) nil [146862 147405])
            ("yas--fom-start" function (:arguments ("fom")) nil [148178 148375])
            ("yas--fom-end" function (:arguments ("fom")) nil [148377 148568])
            ("yas--fom-next" function (:arguments ("fom")) nil [148570 148762])
            ("yas--fom-parent-field" function (:arguments ("fom")) nil [148764 148963])
            ("yas--calculate-adjacencies" function (:arguments ("snippet")) nil [148965 150491])
            ("yas--calculate-mirrors-in-fields" function (:arguments ("snippet" "mirror")) nil [150493 151254])
            ("yas--advance-end-maybe" function (:arguments ("fom" "newend")) nil [151256 151991])
            ("yas--advance-start-maybe" function (:arguments ("fom" "newstart")) nil [151993 152296])
            ("yas--advance-end-of-parents-maybe" function (:arguments ("field" "newend")) nil [152298 152731])
            ("yas--dollar-regions" variable nil nil [152733 152855])
            ("yas--backquote-markers-and-strings" variable nil nil [152857 153036])
            ("yas--snippet-parse-create" function (:arguments ("snippet")) nil [153038 154463])
            ("yas--indent-according-to-mode" function (:arguments ("snippet-markers")) nil [154465 155985])
            ("yas--indent-original-column" variable nil nil [155987 156027])
            ("yas--indent" function (:arguments ("snippet")) nil [156028 157299])
            ("yas--collect-snippet-markers" function (:arguments ("snippet")) nil [157301 157926])
            ("yas--real-line-beginning" function nil nil [157928 158161])
            ("yas--escape-string" function (:arguments ("escaped")) nil [158163 158259])
            ("yas--protect-escapes" function (:arguments ("text" "escaped")) nil [158261 158851])
            ("yas--restore-escapes" function (:arguments ("text" "escaped")) nil [158853 159433])
            ("yas--save-backquotes" function nil nil [159435 160198])
            ("yas--restore-backquotes" function nil nil [160200 160675])
            ("yas--scan-sexps" function (:arguments ("from" "count")) nil [160677 160839])
            ("yas--make-marker" function (:arguments ("pos")) nil [160841 161036])
            ("yas--field-parse-create" function (:arguments ("snippet" "parent-field")) nil [161038 164982])
            ("yas--transform-mirror-parse-create" function (:arguments ("snippet")) nil [164984 166239])
            ("yas--simple-mirror-parse-create" function (:arguments ("snippet")) nil [166241 168216])
            ("yas--delete-regions" function (:arguments ("regions")) nil [168218 168494])
            ("yas--calculate-mirror-depth" function (:arguments ("mirror" "traversed")) nil [168496 169421])
            ("yas--update-mirrors" function (:arguments ("snippet")) nil [169423 171525])
            ("yas--mirror-update-display" function (:arguments ("mirror" "field")) nil [171527 172662])
            ("yas--field-update-display" function (:arguments ("field" "snippet")) nil [172664 173613])
            ("yas--post-command-handler" function nil nil [173643 174838])
            ("put" code nil nil [174955 175038])
            ("yas--expand-from-trigger-key-doc" function nil nil [175039 175940])
            ("put" code nil nil [175942 176027])
            ("yas--expand-from-keymap-doc" function nil nil [176028 177165])
            ("yas--template-pretty-list" function (:arguments ("templates")) nil [177167 177487])
            ("define-button-type" code nil nil [177489 177692])
            ("yas--snippet-description-finish-runonce" function nil nil [177694 177925])
            ("yas--create-snippet-xrefs" function nil nil [177927 178406])
            ("yas--expand-uuid" function (:arguments ("mode-symbol" "uuid" "start" "end" "expand-env")) nil [178408 178875])
            ("yas-verbosity" variable (:default-value 4) nil [178889 178992])
            ("yas--message" function (:arguments ("level" "message" "args")) nil [178994 179197])
            ("yas--format" function (:arguments ("format-control" "format-args")) nil [179199 179317])
            ("unless" code nil nil [179455 182339])
            ("c-neutralize-syntax-in-CPP" function (:arguments ("around" "yas--mp/c-neutralize-syntax-in-CPP" "activate")) nil [182777 183101])
            ("add-hook" code nil nil [183156 183379])
            ("yas--exported-syms" variable (:default-value (quote (yas-snippet-dirs yas-prompt-functions yas-indent-line yas-also-auto-indent-first-line yas-snippet-revival yas-triggers-in-field yas-fallback-behavior yas-choose-keys-first yas-choose-tables-first yas-use-menu yas-trigger-symbol yas-wrap-around-region yas-good-grace yas-visit-from-menu yas-expand-only-for-last-commands yas-field-highlight-face yas-keymap yas-verbosity yas-extra-modes yas-key-syntaxes yas-after-exit-snippet-hook yas-before-expand-snippet-hook yas-buffer-local-condition yas-dont-activate yas-x-prompt yas-ido-prompt yas-no-prompt yas-completing-prompt yas-dropdown-prompt yas-expand yas-minor-mode yas-global-mode yas-direct-keymaps-reload yas-minor-mode-on yas-load-directory yas-reload-all yas-compile-directory yas-recompile-all yas-about yas-expand-from-trigger-key yas-expand-from-keymap yas-insert-snippet yas-visit-snippet-file yas-new-snippet yas-load-snippet-buffer yas-tryout-snippet yas-describe-tables yas-next-field-or-maybe-expand yas-next-field yas-prev-field yas-abort-snippet yas-exit-snippet yas-exit-all-snippets yas-skip-and-clear-or-delete-char yas-expand-snippet yas-define-snippets yas-define-menu yas-snippet-beg yas-snippet-end yas-modified-p yas-moving-away-p yas-text yas-substr yas-choose-value yas-key-to-value yas-throw yas-verify-value yas-field-value yas-text yas-selected-text yas-default-from-field yas-inside-string yas-unimplemented yas-define-condition-cache yas-hippie-try-expand yas-active-keys))) nil [183430 188442])
            ("yas--dont-backport" variable (:default-value (quote (yas-active-keys))) nil [188444 188554])
            ("dolist" code nil nil [188556 188948])
            ("yasnippet" package nil nil [188952 188972]))          
      :file "yasnippet.el"
      :pointmax 189091
      :fsize 189092
      :lastmodtime '(20910 53815 692432 97000)
      :unmatched-syntax '((close-paren 5299 . 5300) (symbol 5068 . 5085) (open-paren 5067 . 5068))))
  :file "!home!jiya!.emacs.d!plugins!yasnippet!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")

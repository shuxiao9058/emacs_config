;; Object tabbar/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "tabbar/"
  :tables
  (list
    (semanticdb-table "tabbar.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("tabbar-version" variable
               (:constant-flag t
                :default-value "2.0")
                nil [348 379])
            ("tabbar" customgroup (:user-visible-flag t) nil [8341 8426])
            ("tabbar-cycle-scope" variable (:user-visible-flag t) nil [8428 8958])
            ("tabbar-auto-scroll-flag" variable
               (:user-visible-flag t
                :default-value t)
                nil [8960 9230])
            ("tabbar-inhibit-functions" variable (:default-value (quote (tabbar-default-inhibit-function))) nil [9232 9510])
            ("tabbar-current-tabset-function" variable nil nil [9512 9669])
            ("tabbar-tab-label-function" variable nil nil [9671 9830])
            ("tabbar-select-tab-function" variable nil nil [9832 9988])
            ("tabbar-help-on-tab-function" variable nil nil [9990 10223])
            ("tabbar-button-label-function" variable nil nil [10225 10417])
            ("tabbar-home-function" variable nil nil [10419 10563])
            ("tabbar-home-help-function" variable nil nil [10565 10775])
            ("tabbar-scroll-left-function" variable (:default-value (quote tabbar-scroll-left)) nil [10777 11001])
            ("tabbar-scroll-left-help-function" variable (:default-value (quote tabbar-scroll-left-help)) nil [11003 11240])
            ("tabbar-scroll-right-function" variable (:default-value (quote tabbar-scroll-right)) nil [11242 11470])
            ("tabbar-scroll-right-help-function" variable (:default-value (quote tabbar-scroll-right-help)) nil [11472 11712])
            ("defalias" code nil nil [11748 11913])
            ("tabbar-click-p" function (:arguments ("event")) nil [11916 12041])
            ("tabbar-shorten" function (:arguments ("str" "width")) nil [12043 13598])
            ("tabbar-make-tab" function (:arguments ("object" "tabset")) nil [13624 13771])
            ("tabbar-tab-value" function (:arguments ("tab")) nil [13773 13851])
            ("tabbar-tab-tabset" function (:arguments ("tab")) nil [13853 13938])
            ("tabbar-tabsets" variable nil nil [13940 13991])
            ("tabbar-tabsets-tabset" variable nil nil [13993 14073])
            ("tabbar-current-tabset" variable nil nil [14075 14161])
            ("make-variable-buffer-local" code nil nil [14162 14213])
            ("tabbar-init-hook" variable nil nil [14215 14353])
            ("tabbar-init-tabsets-store" function nil nil [14355 14610])
            ("tabbar-quit-hook" variable nil nil [14612 14739])
            ("tabbar-free-tabsets-store" function nil nil [14741 14902])
            ("defalias" code nil nil [15033 15555])
            ("tabbar-make-tabset" function (:arguments ("name" "objects")) nil [15558 15998])
            ("tabbar-get-tabset" function (:arguments ("name")) nil [16000 16150])
            ("tabbar-delete-tabset" function (:arguments ("tabset")) nil [16152 16302])
            ("tabbar-tabs" function (:arguments ("tabset")) nil [16304 16398])
            ("tabbar-tab-values" function (:arguments ("tabset")) nil [16400 16532])
            ("tabbar-get-tab" function (:arguments ("object" "tabset")) nil [16534 16706])
            ("tabbar-member" function (:arguments ("tab" "tabset")) nil [16708 16866])
            ("tabbar-template" function (:arguments ("tabset")) nil [16868 17055])
            ("tabbar-set-template" function (:arguments ("tabset" "template")) nil [17057 17288])
            ("tabbar-selected-tab" function (:arguments ("tabset")) nil [17290 17391])
            ("tabbar-selected-value" function (:arguments ("tabset")) nil [17393 17536])
            ("tabbar-selected-p" function (:arguments ("tab" "tabset")) nil [17538 17676])
            ("tabbar--track-selected" variable nil nil [17678 17713])
            ("tabbar-select-tab" function (:arguments ("tab" "tabset")) nil [17715 18085])
            ("tabbar-select-tab-value" function (:arguments ("object" "tabset")) nil [18087 18382])
            ("tabbar-start" function (:arguments ("tabset")) nil [18384 18495])
            ("tabbar-view" function (:arguments ("tabset")) nil [18497 18694])
            ("tabbar-add-tab" function (:arguments ("tabset" "object" "append")) nil [18696 19280])
            ("tabbar-delete-tab" function (:arguments ("tab")) nil [19282 19805])
            ("tabbar-scroll" function (:arguments ("tabset" "count")) nil [19807 20222])
            ("tabbar-tab-next" function (:arguments ("tabset" "tab" "before")) nil [20224 20628])
            ("tabbar-current-tabset" function (:arguments ("update")) nil [20630 21058])
            ("tabbar-get-tabsets-tabset" function nil nil [21060 21346])
            ("tabbar-default" variable
               (:default-value (quote ((((class color grayscale) (background dark)) :inherit variable-pitch :height 0.8 :foreground "grey75" :background "gray50") (((class mono) (background light)) :inherit variable-pitch :height 0.8 :foreground "black" :background "white") (((class mono) (background dark)) :inherit variable-pitch :height 0.8 :foreground "white" :background "black") (t :inherit variable-pitch :height 0.8 :foreground "gray50" :background "gray75")))
                :type "face")
                nil [21362 22163])
            ("tabbar-unselected" variable
               (:default-value (quote ((t :inherit tabbar-default :box (:line-width 1 :color "white" :style released-button))))
                :type "face")
                nil [22165 22352])
            ("tabbar-selected" variable
               (:default-value (quote ((t :inherit tabbar-default :box (:line-width 1 :color "white" :style pressed-button) :foreground "blue")))
                :type "face")
                nil [22354 22563])
            ("tabbar-highlight" variable
               (:default-value (quote ((t :underline t)))
                :type "face")
                nil [22565 22694])
            ("tabbar-separator" variable
               (:default-value (quote ((t :inherit tabbar-default :height 0.1)))
                :type "face")
                nil [22696 22843])
            ("tabbar-button" variable
               (:default-value (quote ((t :inherit tabbar-default :box (:line-width 1 :color "white" :style released-button))))
                :type "face")
                nil [22845 23028])
            ("tabbar-button-highlight" variable
               (:default-value (quote ((t :inherit tabbar-default)))
                :type "face")
                nil [23030 23180])
            ("tabbar-background-color" variable (:user-visible-flag t) nil [23182 23514])
            ("tabbar-background-color" function nil nil [23516 23904])
            ("tabbar-button-widget" variable
               (:constant-flag t
                :default-value (quote (cons (cons :tag "Enabled" (string) (repeat :tag "Image" :extra-offset 2 (restricted-sexp :tag "Spec" :match-alternatives (listp)))) (cons :tag "Disabled" (string) (repeat :tag "Image" :extra-offset 2 (restricted-sexp :tag "Spec" :match-alternatives (listp)))))))
                nil [23950 24939])
            ("tabbar-home-button-value" variable nil nil [24960 25027])
            ("tabbar-home-button-enabled-image" variable
               (:constant-flag t
                :default-value (quote ((:type pbm :data "P2 13 13 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255
255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0
6 0 255 255 255 255 255 255 255 255 255 255 9 130 9 255 255 255 255
255 255 255 255 255 255 26 130 26 255 255 255 255 255 255 255 0 9 26
41 130 41 26 9 0 255 255 255 255 5 145 140 135 130 125 120 115 5 255
255 255 255 0 9 26 41 130 41 26 9 0 255 255 255 255 255 255 255 26 130
26 255 255 255 255 255 255 255 255 255 255 9 130 9 255 255 255 255 255
255 255 255 255 255 0 6 0 255 255 255 255 255 255 255 255 255 255 255
255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255
255 255 255
"))))
                nil [25029 25784])
            ("tabbar-home-button-disabled-image" variable
               (:constant-flag t
                :default-value (quote ((:type pbm :data "P2 13 13 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255
255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255
255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255
255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255
255 255 0 0 1 2 3 2 1 0 0 255 255 255 255 0 132 128 123 119 114 110
106 0 255 255 255 255 0 0 1 2 3 2 1 0 0 255 255 255 255 255 255 255
255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255
255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255
255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255
255 255 255 255 255 255 255 255 255
"))))
                nil [25786 26555])
            ("tabbar-home-button" variable (:default-value (cons (cons "[o]" tabbar-home-button-enabled-image) (cons "[x]" tabbar-home-button-disabled-image))) nil [26557 27003])
            ("tabbar-scroll-left-button-value" variable nil nil [27031 27112])
            ("tabbar-scroll-left-button-enabled-image" variable
               (:constant-flag t
                :default-value (quote ((:type pbm :data "P2 13 13 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255
255 255 255 255 255 255 255 255 128 16 48 255 255 255 255 255 255 255
255 144 28 86 128 0 255 255 255 255 255 255 160 44 92 159 135 113 0
255 255 255 255 160 44 97 165 144 129 120 117 0 255 255 176 44 98 175
174 146 127 126 127 128 0 255 255 0 160 184 156 143 136 134 135 137
138 0 255 255 176 32 67 144 146 144 145 146 148 149 0 255 255 255 255
160 42 75 140 154 158 159 160 0 255 255 255 255 255 255 160 40 74 154
170 171 0 255 255 255 255 255 255 255 255 160 41 82 163 0 255 255 255
255 255 255 255 255 255 255 160 32 48 255 255 255 255 255 255 255 255
255 255 255 255 255 255
"))))
                nil [27114 27956])
            ("tabbar-scroll-left-button" variable (:default-value (cons (cons " <" tabbar-scroll-left-button-enabled-image) (cons " =" nil))) nil [27958 28400])
            ("tabbar-scroll-right-button-value" variable nil nil [28429 28512])
            ("tabbar-scroll-right-button-enabled-image" variable
               (:constant-flag t
                :default-value (quote ((:type pbm :data "P2 13 13 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255
48 32 160 255 255 255 255 255 255 255 255 255 255 44 161 71 32 160 255
255 255 255 255 255 255 255 36 157 163 145 62 32 160 255 255 255 255
255 255 30 128 133 137 142 124 50 32 160 255 255 255 255 29 120 121
124 126 126 124 105 42 32 176 255 255 31 126 127 128 128 128 128 126
124 89 32 255 255 33 134 135 136 137 137 138 119 49 32 176 255 255 34
143 144 145 146 128 54 32 160 255 255 255 255 36 152 153 134 57 32 160
255 255 255 255 255 255 38 141 60 32 160 255 255 255 255 255 255 255
255 48 32 160 255 255 255 255 255 255 255 255 255 255 255 255 255 255
255 255 255 255 255 255 255 255
"))))
                nil [28514 29367])
            ("tabbar-scroll-right-button" variable (:default-value (cons (cons " >" tabbar-scroll-right-button-enabled-image) (cons " =" nil))) nil [29369 29815])
            ("tabbar-separator-widget" variable
               (:constant-flag t
                :default-value (quote (cons (choice (string) (number :tag "Space width" 0.2)) (repeat :tag "Image" :extra-offset 2 (restricted-sexp :tag "Spec" :match-alternatives (listp))))))
                nil [29834 30435])
            ("tabbar-separator-value" variable nil nil [30437 30518])
            ("tabbar-separator" variable (:default-value (list 0.2)) nil [30520 30884])
            ("tabbar-use-images" variable
               (:user-visible-flag t
                :default-value t)
                nil [30900 31394])
            ("tabbar-cached-image" variable nil nil [31525 31557])
            ("tabbar-cached-spec" variable nil nil [31558 31589])
            ("tabbar-find-image" function (:arguments ("specs")) nil [31590 32016])
            ("tabbar-disable-image" function (:arguments ("image")) nil [32018 32222])
            ("tabbar-normalize-image" function (:arguments ("image" "margin")) nil [32224 32781])
            ("tabbar-make-mouse-keymap" function (:arguments ("callback")) nil [32820 33418])
            ("tabbar-make-mouse-event" function (:arguments ("type")) nil [33420 33833])
            ("tabbar-default-button-keymap" variable
               (:constant-flag t
                :default-value (tabbar-make-mouse-keymap (quote tabbar-select-button-callback)))
                nil [33850 33981])
            ("tabbar-help-on-button" function (:arguments ("window" "object" "position")) nil [33983 34629])
            ("tabbar-click-on-button" function (:arguments ("name" "type")) nil [34631 35128])
            ("tabbar-select-button-callback" function
               (:user-visible-flag t
                :arguments ("event"))
                nil [35130 35498])
            ("tabbar-make-button-keymap" function (:arguments ("name")) nil [35500 35894])
            ("tabbar-scroll-left" function (:arguments ("event")) nil [35920 36101])
            ("tabbar-scroll-left-help" function nil nil [36103 36233])
            ("tabbar-scroll-right" function (:arguments ("event")) nil [36235 36417])
            ("tabbar-scroll-right-help" function nil nil [36419 36552])
            ("tabbar-default-tab-keymap" variable
               (:constant-flag t
                :default-value (tabbar-make-mouse-keymap (quote tabbar-select-tab-callback)))
                nil [36566 36688])
            ("tabbar-help-on-tab" function (:arguments ("window" "object" "position")) nil [36690 37163])
            ("tabbar-click-on-tab" function (:arguments ("tab" "type")) nil [37165 37615])
            ("tabbar-select-tab-callback" function
               (:user-visible-flag t
                :arguments ("event"))
                nil [37617 37967])
            ("tabbar-make-tab-keymap" function (:arguments ("tab")) nil [37969 38344])
            ("tabbar-button-label" function (:arguments ("name")) nil [38375 39250])
            ("tabbar-line-button" function (:arguments ("name")) nil [39252 40208])
            ("tabbar-line-separator" function nil nil [40210 41212])
            ("tabbar-line-buttons" function (:arguments ("tabset")) nil [41214 41808])
            ("tabbar-line-tab" function (:arguments ("tab")) nil [41810 42536])
            ("tabbar-line-format" function (:arguments ("tabset")) nil [42538 45016])
            ("tabbar-line" function nil nil [45018 45552])
            ("tabbar-header-line-format" variable
               (:constant-flag t
                :default-value (quote (:eval (tabbar-line))))
                nil [45554 45649])
            ("tabbar-default-inhibit-function" function nil nil [45651 46062])
            ("tabbar-cycle" function (:arguments ("backward" "type")) nil [46103 48546])
            ("tabbar-backward" function (:user-visible-flag t) nil [48563 48721])
            ("tabbar-forward" function (:user-visible-flag t) nil [48738 48889])
            ("tabbar-backward-group" function (:user-visible-flag t) nil [48906 49070])
            ("tabbar-forward-group" function (:user-visible-flag t) nil [49087 49244])
            ("tabbar-backward-tab" function (:user-visible-flag t) nil [49261 49402])
            ("tabbar-forward-tab" function (:user-visible-flag t) nil [49419 49553])
            ("tabbar--mouse" function (:arguments ("number")) nil [49585 49841])
            ("tabbar-press-home" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [49858 50179])
            ("tabbar-press-scroll-left" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [50196 50538])
            ("tabbar-press-scroll-right" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [50555 50900])
            ("mwheel" include nil nil [50930 50947])
            ("tabbar--mwheel-up-event" variable
               (:constant-flag t
                :default-value (symbol-value (if (boundp (quote mouse-wheel-up-event)) (quote mouse-wheel-up-event) (quote mouse-wheel-up-button))))
                nil [50970 51140])
            ("tabbar--mwheel-down-event" variable
               (:constant-flag t
                :default-value (symbol-value (if (boundp (quote mouse-wheel-down-event)) (quote mouse-wheel-down-event) (quote mouse-wheel-down-button))))
                nil [51142 51320])
            ("tabbar--mwheel-key" function (:arguments ("event-type")) nil [51322 51609])
            ("tabbar--mwheel-up-p" function (:arguments ("event")) nil [51611 51885])
            ("tabbar-mwheel-backward" function
               (:user-visible-flag t
                :arguments ("event"))
                nil [51924 52160])
            ("tabbar-mwheel-forward" function
               (:user-visible-flag t
                :arguments ("event"))
                nil [52177 52409])
            ("tabbar-mwheel-backward-group" function
               (:user-visible-flag t
                :arguments ("event"))
                nil [52426 52793])
            ("tabbar-mwheel-forward-group" function
               (:user-visible-flag t
                :arguments ("event"))
                nil [52810 53169])
            ("tabbar-mwheel-backward-tab" function
               (:user-visible-flag t
                :arguments ("event"))
                nil [53186 53467])
            ("tabbar-mwheel-forward-tab" function
               (:user-visible-flag t
                :arguments ("event"))
                nil [53484 53761])
            ("tabbar-mwheel-switch-tab" function
               (:user-visible-flag t
                :arguments ("event"))
                nil [53843 54074])
            ("tabbar-mwheel-switch-group" function
               (:user-visible-flag t
                :arguments ("event"))
                nil [54091 54338])
            ("tabbar-mode-on-p" function nil nil [54360 54506])
            ("tabbar--local-hlf" variable nil nil [54533 54563])
            ("define-minor-mode" code nil nil [54580 56165])
            ("tabbar-prefix-key" variable (:default-value [(control 99)]) nil [56187 56275])
            ("tabbar-prefix-map" variable (:default-value (let ((km (make-sparse-keymap))) (define-key km [(control home)] (quote tabbar-press-home)) (define-key km [(control left)] (quote tabbar-backward)) (define-key km [(control right)] (quote tabbar-forward)) (define-key km [(control up)] (quote tabbar-backward-group)) (define-key km [(control down)] (quote tabbar-forward-group)) (define-key km [(control prior)] (quote tabbar-press-scroll-left)) (define-key km [(control next)] (quote tabbar-press-scroll-right)) (define-key km [(control f10)] (quote tabbar-local-mode)) km)) nil [56277 56865])
            ("tabbar-mode-map" variable (:default-value (let ((km (make-sparse-keymap))) (define-key km tabbar-prefix-key tabbar-prefix-map) km)) nil [56867 57025])
            ("tabbar--global-hlf" variable nil nil [57027 57058])
            ("define-minor-mode" code nil nil [57075 58219])
            ("tabbar-mwheel-mode-map" variable (:default-value (let ((km (make-sparse-keymap))) (if (get (quote mouse-wheel) (quote event-symbol-elements)) (define-key km [A-mouse-wheel] (quote tabbar-mwheel-switch-group)) (let ((up (tabbar--mwheel-key tabbar--mwheel-up-event)) (down (tabbar--mwheel-key tabbar--mwheel-down-event))) (define-key km (\` [header-line (\, down)]) (quote tabbar-mwheel-backward-group)) (define-key km (\` [header-line (\, up)]) (quote tabbar-mwheel-forward-group)) (define-key km (\` [header-line (control (\, down))]) (quote tabbar-mwheel-backward-tab)) (define-key km (\` [header-line (control (\, up))]) (quote tabbar-mwheel-forward-tab)) (define-key km (\` [header-line (shift (\, down))]) (quote tabbar-mwheel-backward)) (define-key km (\` [header-line (shift (\, up))]) (quote tabbar-mwheel-forward)))) km)) nil [58247 59247])
            ("define-minor-mode" code nil nil [59264 59694])
            ("tabbar-mwheel-follow" function nil nil [59696 59898])
            ("add-hook" code nil nil [59900 59955])
            ("add-hook" code nil nil [59956 60011])
            ("tabbar-buffer" customgroup (:user-visible-flag t) nil [60033 60114])
            ("tabbar-buffer-home-button" variable (:default-value (cons (cons "[+]" tabbar-home-button-enabled-image) (cons "[-]" tabbar-home-button-disabled-image))) nil [60116 60759])
            ("tabbar-buffer-list-function" variable (:default-value (quote tabbar-buffer-list)) nil [60761 60957])
            ("tabbar-buffer-groups-function" variable (:default-value (quote tabbar-buffer-groups)) nil [60959 61225])
            ("tabbar-buffer-list" function nil nil [61227 61795])
            ("tabbar-buffer-mode-derived-p" function (:arguments ("mode" "parents")) nil [61797 62084])
            ("tabbar-buffer-groups" function nil nil [62086 63432])
            ("tabbar--buffers" variable nil nil [63468 63496])
            ("tabbar-buffer-update-groups" function nil nil [63498 66526])
            ("tabbar--buffer-show-groups" variable nil nil [66554 66593])
            ("tabbar-buffer-show-groups" function (:arguments ("flag")) nil [66595 66809])
            ("tabbar-buffer-tabs" function nil nil [66811 67180])
            ("tabbar-buffer-button-label" function (:arguments ("name")) nil [67182 68458])
            ("tabbar-buffer-tab-label" function (:arguments ("tab")) nil [68460 69136])
            ("tabbar-buffer-help-on-tab" function (:arguments ("tab")) nil [69138 69641])
            ("tabbar-buffer-select-tab" function (:arguments ("event" "tab")) nil [69643 70056])
            ("tabbar-buffer-click-on-home" function (:arguments ("event")) nil [70058 70480])
            ("tabbar-buffer-help-on-home" function nil nil [70482 70761])
            ("tabbar-buffer-track-killed" function nil nil [70763 71854])
            ("tabbar-buffer-init" function nil nil [71885 72540])
            ("tabbar-buffer-quit" function nil nil [72542 73034])
            ("add-hook" code nil nil [73036 73084])
            ("add-hook" code nil nil [73085 73133])
            ("tabbar" package nil nil [73135 73152])
            ("run-hooks" code nil nil [73154 73183]))          
      :file "tabbar.el"
      :pointmax 73210
      :fsize 73209
      :lastmodtime '(20870 63697 919485 344000)
      :unmatched-syntax '((close-paren 15555 . 15556) (symbol 15014 . 15030) (open-paren 15013 . 15014) (close-paren 11913 . 11914) (symbol 11729 . 11745) (open-paren 11728 . 11729))))
  :file "!home!revir!.emacs.d!tabbar!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")

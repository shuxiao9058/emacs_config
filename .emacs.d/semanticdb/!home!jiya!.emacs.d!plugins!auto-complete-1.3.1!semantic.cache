;; Object auto-complete-1.3.1/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "auto-complete-1.3.1/"
  :tables
  (list
    (semanticdb-table "auto-complete-config.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [914 927])
            ("auto-complete" include nil nil [930 954])
            ("ac-imenu-index" variable nil nil [994 1021])
            ("ac-clear-variable-every-10-minutes" code nil nil [1023 1075])
            ("ac-imenu-candidates" function nil nil [1077 2310])
            ("ac-define-source" code nil nil [2312 2415])
            ("ac-gtags-candidate-face" variable
               (:default-value (quote ((t (:background "lightgray" :foreground "navy"))))
                :type "face")
                nil [2427 2567])
            ("ac-gtags-selection-face" variable
               (:default-value (quote ((t (:background "navy" :foreground "white"))))
                :type "face")
                nil [2569 2719])
            ("ac-gtags-candidate" function nil nil [2721 2853])
            ("ac-define-source" code nil nil [2855 3050])
            ("ac-yasnippet-candidate-face" variable
               (:default-value (quote ((t (:background "sandybrown" :foreground "black"))))
                :type "face")
                nil [3066 3217])
            ("ac-yasnippet-selection-face" variable
               (:default-value (quote ((t (:background "coral3" :foreground "white"))))
                :type "face")
                nil [3219 3379])
            ("ac-yasnippet-table-hash" function (:arguments ("table")) nil [3381 3561])
            ("ac-yasnippet-table-parent" function (:arguments ("table")) nil [3563 3753])
            ("ac-yasnippet-candidate-1" function (:arguments ("table")) nil [3755 4250])
            ("ac-yasnippet-candidates" function nil nil [4252 4738])
            ("ac-define-source" code nil nil [4740 4983])
            ("ac-semantic-candidates" function (:arguments ("prefix")) nil [4998 5402])
            ("ac-define-source" code nil nil [5404 5651])
            ("ac-define-source" code nil nil [5653 5860])
            ("ac-eclim-candidates" function nil nil [5872 5993])
            ("ac-define-source" code nil nil [5995 6118])
            ("ac-css-property-alist" variable
               (:constant-flag t
                :default-value (quote (("azimuth" angle "left-side" "far-left" "left" "center-left" "center" "center-right" "right" "far-right" "right-side" "behind" "leftwards" "rightwards") ("background" background-color background-image background-repeat background-attachment background-position) ("background-attachment" "scroll" "fixed") ("background-color" color "transparent") ("background-image" uri "none") ("background-position" percentage length "left" "center" "right" percentage length "top" "center" "bottom" "left" "center" "right" "top" "center" "bottom") ("background-repeat" "repeat" "repeat-x" "repeat-y" "no-repeat") ("border" border-width border-style border-color) ("border-bottom" border) ("border-bottom-color" border-color) ("border-bottom-style" border-style) ("border-bottom-width" border-width) ("border-collapse" "collapse" "separate") ("border-color" color "transparent") ("border-left" border) ("border-left-color" border-color) ("border-left-style" border-style) ("border-left-width" border-width) ("border-right" border) ("border-right-color" border-color) ("border-right-style" border-style) ("border-right-width" border-width) ("border-spacing" length length) ("border-style" border-style) ("border-top" border) ("border-top-color" border-color) ("border-top-style" border-style) ("border-top-width" border-width) ("border-width" border-width) ("bottom" length percentage "auto") ("caption-side" "top" "bottom") ("clear" "none" "left" "right" "both") ("clip" shape "auto") ("color" color) ("content" "normal" "none" string uri counter "attr()" "open-quote" "close-quote" "no-open-quote" "no-close-quote") ("counter-increment" identifier integer "none") ("counter-reset" identifier integer "none") ("cue" cue-before cue-after) ("cue-after" uri "none") ("cue-before" uri "none") ("cursor" uri "*" "auto" "crosshair" "default" "pointer" "move" "e-resize" "ne-resize" "nw-resize" "n-resize" "se-resize" "sw-resize" "s-resize" "w-resize" "text" "wait" "help" "progress") ("direction" "ltr" "rtl") ("display" "inline" "block" "list-item" "run-in" "inline-block" "table" "inline-table" "table-row-group" "table-header-group" "table-footer-group" "table-row" "table-column-group" "table-column" "table-cell" "table-caption" "none") ("elevation" angle "below" "level" "above" "higher" "lower") ("empty-cells" "show" "hide") ("float" "left" "right" "none") ("font" font-style font-variant font-weight font-size "/" line-height font-family "caption" "icon" "menu" "message-box" "small-caption" "status-bar") ("font-family" family-name generic-family) ("font-size" absolute-size relative-size length percentage) ("font-style" "normal" "italic" "oblique") ("font-variant" "normal" "small-caps") ("font-weight" "normal" "bold" "bolder" "lighter" "100" "200" "300" "400" "500" "600" "700" "800" "900") ("height" length percentage "auto") ("left" length percentage "auto") ("letter-spacing" "normal" length) ("line-height" "normal" number length percentage) ("list-style" list-style-type list-style-position list-style-image) ("list-style-image" uri "none") ("list-style-position" "inside" "outside") ("list-style-type" "disc" "circle" "square" "decimal" "decimal-leading-zero" "lower-roman" "upper-roman" "lower-greek" "lower-latin" "upper-latin" "armenian" "georgian" "lower-alpha" "upper-alpha" "none") ("margin" margin-width) ("margin-bottom" margin-width) ("margin-left" margin-width) ("margin-right" margin-width) ("margin-top" margin-width) ("max-height" length percentage "none") ("max-width" length percentage "none") ("min-height" length percentage) ("min-width" length percentage) ("orphans" integer) ("outline" outline-color outline-style outline-width) ("outline-color" color "invert") ("outline-style" border-style) ("outline-width" border-width) ("overflow" "visible" "hidden" "scroll" "auto") ("padding" padding-width) ("padding-bottom" padding-width) ("padding-left" padding-width) ("padding-right" padding-width) ("padding-top" padding-width) ("page-break-after" "auto" "always" "avoid" "left" "right") ("page-break-before" "auto" "always" "avoid" "left" "right") ("page-break-inside" "avoid" "auto") ("pause" time percentage) ("pause-after" time percentage) ("pause-before" time percentage) ("pitch" frequency "x-low" "low" "medium" "high" "x-high") ("pitch-range" number) ("play-during" uri "mix" "repeat" "auto" "none") ("position" "static" "relative" "absolute" "fixed") ("quotes" string string "none") ("richness" number) ("right" length percentage "auto") ("speak" "normal" "none" "spell-out") ("speak-header" "once" "always") ("speak-numeral" "digits" "continuous") ("speak-punctuation" "code" "none") ("speech-rate" number "x-slow" "slow" "medium" "fast" "x-fast" "faster" "slower") ("stress" number) ("table-layout" "auto" "fixed") ("text-align" "left" "right" "center" "justify") ("text-decoration" "none" "underline" "overline" "line-through" "blink") ("text-indent" length percentage) ("text-transform" "capitalize" "uppercase" "lowercase" "none") ("top" length percentage "auto") ("unicode-bidi" "normal" "embed" "bidi-override") ("vertical-align" "baseline" "sub" "super" "top" "text-top" "middle" "bottom" "text-bottom" percentage length) ("visibility" "visible" "hidden" "collapse") ("voice-family" specific-voice generic-voice "*" specific-voice generic-voice) ("volume" number percentage "silent" "x-soft" "soft" "medium" "loud" "x-loud") ("white-space" "normal" "pre" "nowrap" "pre-wrap" "pre-line") ("widows" integer) ("width" length percentage "auto") ("word-spacing" "normal" length) ("z-index" "auto" integer))))
                nil [6158 12388])
            ("ac-css-value-classes" variable
               (:constant-flag t
                :default-value (quote ((absolute-size "xx-small" "x-small" "small" "medium" "large" "x-large" "xx-large") (border-style "none" "hidden" "dotted" "dashed" "solid" "double" "groove" "ridge" "inset" "outset") (color "aqua" "black" "blue" "fuchsia" "gray" "green" "lime" "maroon" "navy" "olive" "orange" "purple" "red" "silver" "teal" "white" "yellow" "rgb") (counter "counter") (family-name "Courier" "Helvetica" "Times") (generic-family "serif" "sans-serif" "cursive" "fantasy" "monospace") (generic-voice "male" "female" "child") (margin-width "auto") (relative-size "larger" "smaller") (shape "rect") (uri "url"))))
                nil [12390 13197])
            ("ac-css-pseudo-classes" variable
               (:constant-flag t
                :default-value (quote ("active" "after" "before" "first" "first-child" "first-letter" "first-line" "focus" "hover" "lang" "left" "link" "right" "visited")))
                nil [13199 13431])
            ("ac-css-property" variable nil nil [13433 13491])
            ("ac-css-prefix" function nil nil [13493 13681])
            ("ac-css-property-candidates" function nil nil [13683 14298])
            ("ac-source-css-property" variable (:default-value (quote ((candidates . ac-css-property-candidates) (prefix . ac-css-prefix) (requires . 0)))) nil [14300 14426])
            ("ac-ropemacs-loaded" variable nil nil [14473 14504])
            ("ac-ropemacs-require" function nil nil [14505 14755])
            ("ac-ropemacs-setup" function nil nil [14757 14943])
            ("ac-ropemacs-initialize" function nil nil [14945 15226])
            ("ac-ropemacs-completions-cache" variable nil nil [15228 15270])
            ("ac-source-ropemacs" variable (:default-value (quote ((init lambda nil (setq ac-ropemacs-completions-cache (mapcar (lambda (completion) (concat ac-prefix completion)) (ignore-errors (rope-completions))))) (candidates . ac-ropemacs-completions-cache)))) nil [15271 15603])
            ("ac-source-rcodetools" variable (:default-value (quote ((init lambda nil (require (quote rcodetools)) (condition-case x (save-excursion (rct-exec-and-eval rct-complete-command-name "--completion-emacs-icicles")) (error) (setq rct-method-completion-table nil))) (candidates lambda nil (all-completions ac-prefix (mapcar (lambda (completion) (replace-regexp-in-string "	.*$" "" (car completion))) rct-method-completion-table)))))) nil [15620 16240])
            ("ac-common-setup" function nil nil [16268 16342])
            ("ac-emacs-lisp-mode-setup" function nil nil [16344 16519])
            ("ac-cc-mode-setup" function nil nil [16521 16627])
            ("ac-ruby-mode-setup" function nil nil [16629 16728])
            ("ac-css-mode-setup" function nil nil [16730 16824])
            ("ac-config-default" function nil nil [16826 17255])
            ("auto-complete-config" package nil nil [17257 17288]))          
      :file "auto-complete-config.el"
      :pointmax 17327
      :fsize 17326
      :lastmodtime '(20911 3944 358349 225000)
      :unmatched-syntax '((close-paren 927 . 928) (symbol 894 . 911) (open-paren 893 . 894)))
    (semanticdb-table "auto-complete.el"
      :file "auto-complete.el"
      :fsize 64128
      :lastmodtime '(20911 3944 361682 540000)))
  :file "!home!jiya!.emacs.d!plugins!auto-complete-1.3.1!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")

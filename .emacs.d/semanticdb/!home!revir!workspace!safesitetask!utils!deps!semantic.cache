;; Object deps/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "deps/"
  :tables
  (list
    (semanticdb-table "compiler-specific.h"
      :major-mode 'c-mode
      :tags 
        '( ("UTILS_COMPILER_SPECIFIC_H" variable (:constant-flag t) nil [413 438])
            ("COMPILER_GCC" variable (:constant-flag t) nil [484 496])
            ("MSVC_SUPPRESS_WARNING" variable (:constant-flag t) nil [2848 2869])
            ("MSVC_PUSH_DISABLE_WARNING" variable (:constant-flag t) nil [2881 2906])
            ("MSVC_PUSH_WARNING_LEVEL" variable (:constant-flag t) nil [2918 2941])
            ("MSVC_POP_WARNING" variable (:constant-flag t) nil [2953 2969])
            ("MSVC_DISABLE_OPTIMIZE" variable (:constant-flag t) nil [2980 3001])
            ("MSVC_ENABLE_OPTIMIZE" variable (:constant-flag t) nil [3012 3032])
            ("ALLOW_THIS_IN_INITIALIZER_LIST" variable (:constant-flag t) nil [3043 3073])
            ("NON_EXPORTED_BASE" variable (:constant-flag t) nil [3093 3110])
            ("ALLOW_UNUSED" variable (:constant-flag t) nil [3202 3214])
            ("WARN_UNUSED_RESULT" variable (:constant-flag t) nil [3284 3302])
            ("DEPRECATED" variable (:constant-flag t) nil [3347 3357])
            ("ALWAYS_INLINE" variable (:constant-flag t) nil [3398 3411])
            ("PRINTF_FORMAT" variable (:constant-flag t) nil [3452 3465])
            ("SCANF_FORMAT" variable (:constant-flag t) nil [3518 3530])
            ("WPRINTF_FORMAT" variable (:constant-flag t) nil [3582 3596])
            ("ATTR_PURE" variable (:constant-flag t) nil [3611 3620])
            ("ATTR_CONST" variable (:constant-flag t) nil [3654 3664])
            ("LINK_ERROR" variable (:constant-flag t) nil [3702 3712])
            ("COMPILE_WARN" variable (:constant-flag t) nil [3759 3771])
            ("COMPILE_ERROR" variable (:constant-flag t) nil [3816 3829])
            ("NOINLINE" variable (:constant-flag t) nil [4301 4309])
            ("NOINLINE" variable (:constant-flag t) nil [4417 4425])
            ("ALIGNAS" variable (:constant-flag t) nil [4652 4659])
            ("ALIGNOF" variable (:constant-flag t) nil [5096 5103])
            ("OVERRIDE" variable (:constant-flag t) nil [5411 5419])
            ("likely" variable (:constant-flag t) nil [5582 5588])
            ("unlikely" variable (:constant-flag t) nil [5605 5613]))          
      :file "compiler-specific.h"
      :pointmax 5668
      :fsize 5754
      :lastmodtime '(20900 35805 885611 783000)
      :unmatched-syntax nil
      :lexical-table 
        '(("MSVC_DISABLE_OPTIMIZE" (spp-arg-list nil 3001 . 3003))
          ("NON_EXPORTED_BASE" (spp-arg-list ("code") 3110 . 3116) . ((symbol "code" 3117 . 3121)))
          ("ALWAYS_INLINE" . ((symbol "__attribute__" 3413 . 3426) (semantic-list "((always_inline))" 3426 . 3443)))
          ("MSVC_PUSH_WARNING_LEVEL" (spp-arg-list ("n") 2941 . 2944))
          ("MSVC_PUSH_DISABLE_WARNING" (spp-arg-list ("n") 2906 . 2909))
          ("PRINTF_FORMAT" (spp-arg-list ("a" "b") 3465 . 3471) . ((symbol "__attribute__" 3472 . 3485) (semantic-list "((format(printf, a, b)))" 3485 . 3509)))
          ("SCANF_FORMAT" (spp-arg-list ("a" "b") 3530 . 3536) . ((symbol "__attribute__" 3537 . 3550) (semantic-list "((format(scanf, a, b)))" 3550 . 3573)))
          ("WPRINTF_FORMAT" (spp-arg-list ("a" "b") 3596 . 3602))
          ("DEPRECATED" . ((symbol "__attribute__" 3360 . 3373) (semantic-list "((deprecated))" 3373 . 3387)))
          ("NOINLINE")
          ("ALIGNAS" (spp-arg-list ("byte_alignment") 4659 . 4675) . ((symbol "__attribute__" 4676 . 4689) (semantic-list "((aligned(byte_alignment)))" 4689 . 4716)))
          ("COMPILER_GCC" . ((number "1" 497 . 498)))
          ("OVERRIDE")
          ("likely" (spp-arg-list ("x") 5588 . 5591) . ((semantic-list "(x)" 5592 . 5595)))
          ("ALLOW_UNUSED" . ((symbol "__attribute__" 3216 . 3229) (semantic-list "((unused))" 3229 . 3239)))
          ("LINK_ERROR" (spp-arg-list ("msg") 3712 . 3717) . ((symbol "__attribute__" 3719 . 3732) (semantic-list "((__error__(msg)))" 3732 . 3750)))
          ("COMPILE_ERROR" (spp-arg-list ("msg") 3829 . 3834) . ((symbol "__attribute__" 3835 . 3848) (semantic-list "((error(msg)))" 3848 . 3862)))
          ("ALIGNOF" (spp-arg-list ("type") 5103 . 5109) . ((symbol "__alignof__" 5110 . 5121) (semantic-list "(type)" 5121 . 5127)))
          ("MSVC_SUPPRESS_WARNING" (spp-arg-list ("n") 2869 . 2872))
          ("MSVC_ENABLE_OPTIMIZE" (spp-arg-list nil 3032 . 3034))
          ("WARN_UNUSED_RESULT" . ((symbol "__attribute__" 3303 . 3316) (semantic-list "((warn_unused_result))" 3316 . 3338)))
          ("ATTR_PURE" . ((symbol "__attribute__" 3623 . 3636) (semantic-list "((pure))" 3636 . 3644)))
          ("ATTR_CONST" . ((symbol "__attribute__" 3667 . 3680) (semantic-list "((__const__))" 3680 . 3693)))
          ("MSVC_POP_WARNING" (spp-arg-list nil 2969 . 2971))
          ("unlikely" (spp-arg-list ("x") 5613 . 5616) . ((semantic-list "(x)" 5617 . 5620)))
          ("UTILS_COMPILER_SPECIFIC_H")
          ("ALLOW_THIS_IN_INITIALIZER_LIST" (spp-arg-list ("code") 3073 . 3079) . ((symbol "code" 3080 . 3084)))
          ("COMPILE_WARN" (spp-arg-list ("msg") 3771 . 3776) . ((symbol "__attribute__" 3777 . 3790) (semantic-list "((warning(msg)))" 3790 . 3806)))
          )
)
    (semanticdb-table "platform-arch.h"
      :major-mode 'c-mode
      :tags 
        '( ("UTILS_PLATFORM_ARCH_H" variable (:constant-flag t) nil [403 424])
            ("compiler-specific.h" include nil nil [428 458])
            ("OS_LINUX" variable (:constant-flag t) nil [802 810])
            ("OS_POSIX" variable (:constant-flag t) nil [1682 1690])
            ("USE_X11" variable (:constant-flag t) nil [1802 1809])
            ("ARCH_CPU_X86_FAMILY" variable (:constant-flag t) nil [1907 1926])
            ("ARCH_CPU_X86_64" variable (:constant-flag t) nil [1937 1952])
            ("ARCH_CPU_64_BITS" variable (:constant-flag t) nil [1963 1979])
            ("ARCH_CPU_LITTLE_ENDIAN" variable (:constant-flag t) nil [1990 2012])
            ("TEMP_FAILURE_RETRY" variable (:constant-flag t) nil [3002 3020])
            ("HANDLE_EINTR" variable (:constant-flag t) nil [3325 3337]))          
      :file "platform-arch.h"
      :pointmax 4007
      :fsize 4111
      :lastmodtime '(20900 35805 885611 783000)
      :unmatched-syntax '((punctuation 3832 . 3833) (WCHAR 3825 . 3832) (FOR 3821 . 3824) (symbol 3813 . 3820) (symbol 3809 . 3812) (symbol 3802 . 3808) (symbol 3796 . 3801) (punctuation 3795 . 3796) (punctuation 2570 . 2571) (symbol 2558 . 2570) (symbol 2548 . 2557) (symbol 2543 . 2547) (FOR 2539 . 2542) (symbol 2531 . 2538) (symbol 2527 . 2530) (symbol 2520 . 2526) (symbol 2514 . 2519) (punctuation 2513 . 2514) (semantic-list 1784 . 1793) (symbol 1777 . 1784) (punctuation 1776 . 1777) (semantic-list 1664 . 1673) (symbol 1657 . 1664) (punctuation 1651 . 1652) (punctuation 1650 . 1651) (semantic-list 1637 . 1649) (symbol 1630 . 1637) (punctuation 1628 . 1629) (punctuation 1627 . 1628) (semantic-list 1614 . 1626) (symbol 1607 . 1614) (punctuation 1605 . 1606) (punctuation 1604 . 1605) (semantic-list 1591 . 1603) (symbol 1584 . 1591) (punctuation 1240 . 1241) (symbol 1232 . 1240) (symbol 1227 . 1231) (FOR 1223 . 1226) (symbol 1215 . 1222) (symbol 1211 . 1214) (symbol 1204 . 1210) (symbol 1198 . 1203) (punctuation 1197 . 1198))
      :lexical-table 
        '(("OS_POSIX" . ((number "1" 1691 . 1692)))
          ("USE_X11" . ((number "1" 1810 . 1811)))
          ("TEMP_FAILURE_RETRY" (spp-arg-list ("x") 3020 . 3023) . ((semantic-list "({ \\
	typeof(x) eintr_wrapper_result; \\
	do { \\
	eintr_wrapper_result = (x); \\
	} while (eintr_wrapper_result == -1 && errno == EINTR); \\
	eintr_wrapper_result; \\
})" 3024 . 3189)))
          ("UTILS_PLATFORM_ARCH_H")
          ("ARCH_CPU_X86_64" . ((number "1" 1953 . 1954)))
          ("ARCH_CPU_X86_FAMILY" . ((number "1" 1927 . 1928)))
          ("ARCH_CPU_64_BITS" . ((number "1" 1980 . 1981)))
          ("ARCH_CPU_LITTLE_ENDIAN" . ((number "1" 2013 . 2014)))
          ("HANDLE_EINTR" (spp-arg-list ("x") 3337 . 3340) . ((symbol "TEMP_FAILURE_RETRY" 3341 . 3359) (semantic-list "(x)" 3359 . 3362)))
          ("OS_LINUX" . ((number "1" 811 . 812)))
          )
)
    (semanticdb-table "min-max.h"
      :major-mode 'c-mode
      :tags 
        '( ("UTILS_MIN_MAX_H" variable (:constant-flag t) nil [469 484])
            ("compiler-specific.h" include nil nil [488 518])
            ("xmin" variable (:constant-flag t) nil [1445 1449])
            ("xmax" variable (:constant-flag t) nil [1488 1492])
            ("xmin3" variable (:constant-flag t) nil [1531 1536])
            ("xmax3" variable (:constant-flag t) nil [1574 1579]))          
      :file "min-max.h"
      :pointmax 1664
      :fsize 1714
      :lastmodtime '(20900 35805 885611 783000)
      :unmatched-syntax nil
      :lexical-table 
        '(("UTILS_MIN_MAX_H")
          ("xmin3" (spp-arg-list ("x" "y" "z") 1536 . 1545) . ((symbol "xmin" 1546 . 1550) (semantic-list "(xmin(x, y), z)" 1550 . 1565)))
          ("xmax" (spp-arg-list ("x" "y") 1492 . 1498) . ((semantic-list "((x) > (y) ? (x) : (y))" 1499 . 1522)))
          ("xmin" (spp-arg-list ("x" "y") 1449 . 1455) . ((semantic-list "((x) > (y) ? (y) : (x))" 1456 . 1479)))
          ("xmax3" (spp-arg-list ("x" "y" "z") 1579 . 1588) . ((symbol "xmax" 1589 . 1593) (semantic-list "(xmax(x, y), z)" 1593 . 1608)))
          )
)
    (semanticdb-table "ConvertUTF.h"
      :major-mode 'c-mode
      :tags 
        '( ("CONVERT_UTF_H" variable (:constant-flag t) nil [3974 3987])
            ("UTF32" type
               (:typedef ("unsigned int")
                :superclasses "unsigned int"
                :type "typedef")
                nil [3989 4016])
            ("UTF16" type
               (:typedef ("unsigned short")
                :superclasses "unsigned short"
                :type "typedef")
                nil [4040 4069])
            ("UTF8" type
               (:typedef ("unsigned char")
                :superclasses "unsigned char"
                :type "typedef")
                nil [4093 4120])
            ("Boolean" type
               (:typedef ("unsigned char")
                :superclasses "unsigned char"
                :type "typedef")
                nil [4144 4174])
            ("UNI_REPLACEMENT_CHAR" variable (:constant-flag t) nil [4230 4250])
            ("UNI_MAX_BMP" variable (:constant-flag t) nil [4277 4288])
            ("UNI_MAX_UTF16" variable (:constant-flag t) nil [4315 4328])
            ("UNI_MAX_UTF32" variable (:constant-flag t) nil [4355 4368])
            ("UNI_MAX_LEGAL_UTF32" variable (:constant-flag t) nil [4395 4414])
            ("ConversionResult" type
               (:typedef ("" type
                     (:members 
                        ( ("conversionOK" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [4450 4463])
                          ("sourceExhausted" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [4495 4511])
                          ("targetExhausted" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [4560 4576])
                          ("sourceIllegal" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [4622 4681]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [4434 4699])
            ("ConversionFlags" type
               (:typedef ("" type
                     (:members 
                        ( ("strictConversion" variable
                             (:constant-flag t
                              :default-value (4736 4737)
                              :type "int")
                              (reparse-symbol enumsubparts) [4717 4737])
                          ("lenientConversion" variable
                             (:constant-flag t
                              :type "int")
                              (reparse-symbol enumsubparts) [4740 4759]))                        
                      :type "enum")
                      nil nil)
                :type "typedef")
                nil [4701 4776])
            ("isLegalUTF8Sequence" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("Boolean" type (:type "class") nil nil)
                :arguments 
                  ( ("source" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("UTF8" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5836 5855])
                    ("sourceEnd" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("UTF8" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5856 5878]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [5808 5879])
            ("ConvertUTF32toUTF16" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("ConversionResult" type (:type "class") nil nil)
                :arguments 
                  ( ("sourceStart" variable
                       (:pointer 2
                        :constant-flag t
                        :type ("UTF32" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5690 5716])
                    ("sourceEnd" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("UTF32" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5717 5740])
                    ("targetStart" variable
                       (:pointer 2
                        :type ("UTF16" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5744 5764])
                    ("targetEnd" variable
                       (:pointer 1
                        :type ("UTF16" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5765 5782])
                    ("flags" variable (:type ("ConversionFlags" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5783 5805]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [5649 5806])
            ("ConvertUTF16toUTF32" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("ConversionResult" type (:type "class") nil nil)
                :arguments 
                  ( ("sourceStart" variable
                       (:pointer 2
                        :constant-flag t
                        :type ("UTF16" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5531 5557])
                    ("sourceEnd" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("UTF16" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5558 5581])
                    ("targetStart" variable
                       (:pointer 2
                        :type ("UTF32" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5585 5605])
                    ("targetEnd" variable
                       (:pointer 1
                        :type ("UTF32" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5606 5623])
                    ("flags" variable (:type ("ConversionFlags" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5624 5646]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [5490 5647])
            ("ConvertUTF32toUTF8" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("ConversionResult" type (:type "class") nil nil)
                :arguments 
                  ( ("sourceStart" variable
                       (:pointer 2
                        :constant-flag t
                        :type ("UTF32" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5372 5398])
                    ("sourceEnd" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("UTF32" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5399 5422])
                    ("targetStart" variable
                       (:pointer 2
                        :type ("UTF8" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5426 5445])
                    ("targetEnd" variable
                       (:pointer 1
                        :type ("UTF8" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5446 5462])
                    ("flags" variable (:type ("ConversionFlags" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5463 5485]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [5332 5486])
            ("ConvertUTF8toUTF32" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("ConversionResult" type (:type "class") nil nil)
                :arguments 
                  ( ("sourceStart" variable
                       (:pointer 2
                        :constant-flag t
                        :type ("UTF8" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5216 5241])
                    ("sourceEnd" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("UTF8" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5242 5264])
                    ("targetStart" variable
                       (:pointer 2
                        :type ("UTF32" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5268 5288])
                    ("targetEnd" variable
                       (:pointer 1
                        :type ("UTF32" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5289 5306])
                    ("flags" variable (:type ("ConversionFlags" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5307 5329]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [5176 5330])
            ("ConvertUTF16toUTF8" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("ConversionResult" type (:type "class") nil nil)
                :arguments 
                  ( ("sourceStart" variable
                       (:pointer 2
                        :constant-flag t
                        :type ("UTF16" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5058 5084])
                    ("sourceEnd" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("UTF16" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5085 5108])
                    ("targetStart" variable
                       (:pointer 2
                        :type ("UTF8" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5112 5131])
                    ("targetEnd" variable
                       (:pointer 1
                        :type ("UTF8" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5132 5148])
                    ("flags" variable (:type ("ConversionFlags" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5149 5171]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [5018 5172])
            ("ConvertUTF8toUTF16" function
               (:typemodifiers ("extern" "\"C\"")
                :type ("ConversionResult" type (:type "class") nil nil)
                :arguments 
                  ( ("sourceStart" variable
                       (:pointer 2
                        :constant-flag t
                        :type ("UTF8" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4902 4927])
                    ("sourceEnd" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("UTF8" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4928 4950])
                    ("targetStart" variable
                       (:pointer 2
                        :type ("UTF16" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4954 4974])
                    ("targetEnd" variable
                       (:pointer 1
                        :type ("UTF16" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4975 4992])
                    ("flags" variable (:type ("ConversionFlags" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4993 5015]))                  
                :prototype-flag t)
                (reparse-symbol extern-c-contents) [4862 5016]))          
      :file "ConvertUTF.h"
      :pointmax 5917
      :fsize 5919
      :lastmodtime '(20900 35805 885611 783000)
      :unmatched-syntax nil
      :lexical-table 
        '(("UNI_MAX_BMP" . ((semantic-list "(UTF32)" 4289 . 4296) (number "0x0000FFFF" 4296 . 4306)))
          ("CONVERT_UTF_H")
          ("UNI_MAX_LEGAL_UTF32" . ((semantic-list "(UTF32)" 4415 . 4422) (number "0x0010FFFF" 4422 . 4432)))
          ("UNI_MAX_UTF16" . ((semantic-list "(UTF32)" 4329 . 4336) (number "0x0010FFFF" 4336 . 4346)))
          ("UNI_REPLACEMENT_CHAR" . ((semantic-list "(UTF32)" 4251 . 4258) (number "0x0000FFFD" 4258 . 4268)))
          ("UNI_MAX_UTF32" . ((semantic-list "(UTF32)" 4369 . 4376) (number "0x7FFFFFFF" 4376 . 4386)))
          )
))
  :file "!home!revir!workspace!safesitetask!utils!deps!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")

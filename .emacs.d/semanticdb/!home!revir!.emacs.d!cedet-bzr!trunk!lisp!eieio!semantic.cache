;; Object eieio/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "eieio/"
  :tables
  (list
    (semanticdb-table "eieio-base.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("eieio" include nil nil [1096 1112])
            ("cl" include nil nil [1132 1145])
            ("eieio-instance-inheritor" type
               (:members 
                  ( ("parent-instance" variable
                       (:documentation "The parent of this instance.
If a slot of this class is referenced, and is unbound, then the parent
is checked for a value."
                        :type "eieio-instance-inheritor-child")
                        nil nil))                  
                :type "class")
                nil [1360 1895])
            ("slot-unbound" function
               (:parent "eieio-instance-inheritor"
                :arguments ("object" "class" "slot-name" "fn"))
                nil [1897 2422])
            ("clone" function
               (:parent "eieio-instance-inheritor"
                :arguments ("obj" "params"))
                nil [2424 3358])
            ("eieio-instance-inheritor-slot-boundp" function
               (:parent "eieio-instance-inheritor"
                :arguments ("object" "slot"))
                nil [3360 3965])
            ("eieio-instance-tracker" type
               (:members 
                  ( ("tracking-symbol" variable
                       (:documentation "The symbol used to maintain a list of our instances.
The instance list is treated as a variable, with new instances added to it."
                        :static-flag t
                        :type "symbol")
                        nil nil))                  
                :type "class")
                nil [4160 4607])
            ("initialize-instance" function
               (:parent "eieio-instance-tracker"
                :arguments ("this" "slots"))
                nil [4609 5026])
            ("delete-instance" function
               (:parent "eieio-instance-tracker"
                :arguments ("this"))
                nil [5028 5237])
            ("eieio-instance-tracker-find" function (:arguments ("key" "slot" "list-symbol")) nil [5283 5485])
            ("eieio-singleton" type
               (:members 
                  ( ("singleton" variable
                       (:documentation "The only instance of this class that will be instantiated.
Multiple calls to `make-instance' will return this object."
                        :static-flag t
                        :type "eieio-singleton")
                        nil nil))                  
                :type "class")
                nil [5850 6228])
            ("constructor" function
               (:parent "eieio-singleton"
                :arguments ("class" "name" "slots"))
                nil [6230 6739])
            ("eieio-persistent" type
               (:members 
                  ( ("file" variable
                       (:documentation "The save file for this persistent object.
This must be a string, and must be specified when the new object is
instantiated."
                        :type "string")
                        nil nil)
                    ("extension" variable
                       (:documentation "Extension of files saved by this object.
Enables auto-choosing nice file names based on name."
                        :static-flag t
                        :default-value ".eieio"
                        :type "string")
                        nil nil)
                    ("file-header-line" variable
                       (:documentation "Header line for the save file.
This is used with the `object-write' method."
                        :static-flag t
                        :default-value ";; EIEIO PERSISTENT OBJECT"
                        :type "string")
                        nil nil)
                    ("do-backups" variable
                       (:documentation "Saving this object should make backup files.
Setting to nil will mean no backups are made."
                        :static-flag t
                        :default-value "t"
                        :type "boolean")
                        nil nil))                  
                :type "class")
                nil [7328 8475])
            ("eieio-persistent-save-interactive" function
               (:parent "eieio-persistent"
                :arguments ("this" "prompt" "name"))
                nil [8477 8952])
            ("eieio-persistent-read" function (:arguments ("filename" "class" "allow-subclass")) nil [8954 10330])
            ("eieio-persistent-convert-list-to-object" function (:arguments ("inputlist")) nil [10332 11540])
            ("eieio-persistent-validate/fix-slot-value" function (:arguments ("class" "slot" "proposed-value")) nil [11542 14188])
            ("eieio-persistent-slot-type-is-class-p" function (:arguments ("type")) nil [14190 15532])
            ("object-write" function
               (:parent "eieio-persistent"
                :arguments ("this" "comment"))
                nil [15534 15782])
            ("eieio-persistent-path-relative" function
               (:parent "eieio-persistent"
                :arguments ("this" "file"))
                nil [15784 16011])
            ("eieio-persistent-save" function
               (:parent "eieio-persistent"
                :arguments ("this" "file"))
                nil [16013 17319])
            ("eieio-named" type (:type "class") nil [17562 17716])
            ("slot-missing" function
               (:parent "eieio-named"
                :arguments ("obj" "slot-name" "operation" "new-value"))
                nil [17718 18478])
            ("eieio-base" package nil nil [18480 18501]))          
      :file "eieio-base.el"
      :pointmax 18531
      :fsize 18530
      :lastmodtime '(20813 60452 0 0)
      :unmatched-syntax '((close-paren 1145 . 1146) (symbol 1114 . 1131) (open-paren 1113 . 1114)))
    (semanticdb-table "eieio.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [1791 1804])
            ("eieio-version" variable (:default-value "1.4") nil [1833 1891])
            ("eieio-version" function (:user-visible-flag t) nil [1893 2001])
            ("eieio-core" include nil nil [2003 2024])
            ("defclass" function (:arguments ("name" "superclass" "slots" "options-and-doc")) nil [2056 4875])
            ("make-instance" function (:arguments ("class" "initargs")) nil [4931 5800])
            ("defgeneric" function (:arguments ("method" "args" "doc-string")) nil [5837 6398])
            ("defmethod" function (:arguments ("method" "args")) nil [6400 8045])
            ("oref" function (:arguments ("obj" "slot")) nil [8082 8305])
            ("defalias" code nil nil [8307 8341])
            ("defalias" code nil nil [8342 8380])
            ("oref-default" function (:arguments ("obj" "slot")) nil [8382 8687])
            ("with-slots" function (:arguments ("spec-list" "object" "body")) nil [8714 9813])
            ("define-obsolete-function-alias" code nil nil [9921 10003])
            ("eieio-object-name" function (:arguments ("obj" "extra")) nil [10005 10323])
            ("define-obsolete-function-alias" code nil nil [10324 10396])
            ("eieio-object-name-string" function (:arguments ("obj")) nil [10398 10543])
            ("define-obsolete-function-alias" code nil nil [10544 10632])
            ("eieio-object-set-name-string" function (:arguments ("obj" "name")) nil [10634 10836])
            ("define-obsolete-function-alias" code nil nil [10837 10932])
            ("eieio-object-class" function (:arguments ("obj")) nil [10934 11075])
            ("define-obsolete-function-alias" code nil nil [11076 11150])
            ("define-obsolete-function-alias" code nil nil [11172 11242])
            ("eieio-object-class-name" function (:arguments ("obj")) nil [11244 11421])
            ("define-obsolete-function-alias" code nil nil [11422 11507])
            ("eieio-class-parents" function (:arguments ("class")) nil [11509 11752])
            ("define-obsolete-function-alias" code nil nil [11753 11829])
            ("eieio-class-children" function (:arguments ("class")) nil [11831 12047])
            ("define-obsolete-function-alias" code nil nil [12048 12128])
            ("define-obsolete-function-alias" code nil nil [12158 12248])
            ("define-obsolete-function-alias" code nil nil [12249 12338])
            ("eieio-class-parent" function (:arguments ("class")) nil [12340 12480])
            ("define-obsolete-function-alias" code nil nil [12481 12555])
            ("same-class-p" function (:arguments ("obj" "class")) nil [12557 12740])
            ("object-of-class-p" function (:arguments ("obj" "class")) nil [12742 12987])
            ("defalias" code nil nil [13015 13060])
            ("child-of-class-p" function (:arguments ("child" "class")) nil [13062 13410])
            ("object-slots" function (:arguments ("obj")) nil [13412 13584])
            ("class-slot-initarg" function (:arguments ("class" "slot")) nil [13586 13891])
            ("oset" function (:arguments ("obj" "slot" "value")) nil [13918 14167])
            ("oset-default" function (:arguments ("class" "slot" "value")) nil [14169 14480])
            ("slot-boundp" function (:arguments ("object" "slot")) nil [14525 15110])
            ("slot-makeunbound" function (:arguments ("object" "slot")) nil [15112 15225])
            ("slot-exists-p" function (:arguments ("object-or-class" "slot")) nil [15227 15598])
            ("find-class" function (:arguments ("symbol" "errorp")) nil [15600 15929])
            ("object-assoc" function (:arguments ("key" "slot" "list")) nil [15990 16533])
            ("object-assoc-list" function (:arguments ("slot" "list")) nil [16535 16998])
            ("object-assoc-list-safe" function (:arguments ("slot" "list")) nil [17000 17544])
            ("object-add-to-list" function (:arguments ("object" "slot" "item" "append")) nil [17546 18351])
            ("object-remove-from-list" function (:arguments ("object" "slot" "item")) nil [18353 18703])
            ("next-method-p" function nil nil [18738 18917])
            ("call-next-method" function (:arguments ("replacement-args")) nil [18919 20091])
            ("defsetf" code nil nil [20151 20182])
            ("if" code nil nil [20184 20797])
            ("eieio-default-superclass" type (:type "class") nil [21182 21449])
            ("defalias" code nil nil [21451 21503])
            ("constructor" function (:arguments ("newname" "slots")) nil [21505 21619])
            ("constructor" function
               (:parent "eieio-default-superclass"
                :arguments ("class" "newname" "slots"))
                nil [21621 22455])
            ("shared-initialize" function (:arguments ("slots")) nil [22457 22605])
            ("shared-initialize" function
               (:parent "eieio-default-superclass"
                :arguments ("obj" "slots"))
                nil [22607 23102])
            ("initialize-instance" function (:arguments ("slots")) nil [23104 23209])
            ("initialize-instance" function
               (:parent "eieio-default-superclass"
                :arguments ("this" "slots"))
                nil [23211 24677])
            ("slot-missing" function (:arguments ("slot-name" "operation" "new-value")) nil [24679 24822])
            ("slot-missing" function
               (:parent "eieio-default-superclass"
                :arguments ("object" "slot-name" "operation" "new-value"))
                nil [24824 25349])
            ("slot-unbound" function (:arguments ("class" "slot-name" "fn")) nil [25351 25480])
            ("slot-unbound" function
               (:parent "eieio-default-superclass"
                :arguments ("object" "class" "slot-name" "fn"))
                nil [25482 26255])
            ("no-applicable-method" function (:arguments ("method" "args")) nil [26257 26382])
            ("no-applicable-method" function
               (:parent "eieio-default-superclass"
                :arguments ("object" "method" "args"))
                nil [26384 26847])
            ("no-next-method" function (:arguments ("args")) nil [26849 26971])
            ("no-next-method" function
               (:parent "eieio-default-superclass"
                :arguments ("object" "args"))
                nil [26973 27459])
            ("clone" function (:arguments ("params")) nil [27461 27721])
            ("clone" function
               (:parent "eieio-default-superclass"
                :arguments ("obj" "params"))
                nil [27723 28359])
            ("destructor" function (:arguments ("params")) nil [28361 28468])
            ("destructor" function
               (:parent "eieio-default-superclass"
                :arguments ("this" "params"))
                nil [28470 28718])
            ("object-print" function (:arguments ("strings")) nil [28720 29017])
            ("object-print" function
               (:parent "eieio-default-superclass"
                :arguments ("this" "strings"))
                nil [29019 29633])
            ("eieio-print-depth" variable nil nil [29635 29727])
            ("object-write" function (:arguments ("comment")) nil [29729 29895])
            ("object-write" function
               (:parent "eieio-default-superclass"
                :arguments ("this" "comment"))
                nil [29897 31828])
            ("eieio-override-prin1" function (:arguments ("thing")) nil [31830 32229])
            ("eieio-list-prin1" function (:arguments ("list")) nil [32231 32748])
            ("change-class" function (:arguments ("obj" "class")) nil [32793 32998])
            ("eieio-edebug-prin1-to-string" function (:arguments ("object" "noescape")) nil [33031 33544])
            ("add-hook" code nil nil [33546 34837])
            ("eieio" package nil nil [34839 34855]))          
      :file "eieio.el"
      :pointmax 34876
      :fsize 34875
      :lastmodtime '(20881 39619 0 0)
      :unmatched-syntax '((close-paren 1804 . 1805) (symbol 1773 . 1790) (open-paren 1772 . 1773)))
    (semanticdb-table "eieio-core.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [1191 1204])
            ("if" code nil nil [1250 1686])
            ("put" code nil nil [1688 1768])
            ("eieio--defalias" function (:arguments ("name" "body")) nil [1806 2112])
            ("declare-function" code nil nil [2207 2246])
            ("declare-function" code nil nil [2247 2286])
            ("declare-function" code nil nil [2287 2330])
            ("eieio-hook" variable nil nil [2367 2462])
            ("eieio-error-unsupported-class-tags" variable nil nil [2464 2698])
            ("eieio-skip-typecheck" variable nil nil [2700 2959])
            ("eieio-optimize-primary-methods-flag" variable (:default-value t) nil [2961 3077])
            ("eieio-initializing-object" variable nil nil [3079 3167])
            ("eieio-unbound" variable
               (:constant-flag t
                :default-value (if (and (boundp (quote eieio-unbound)) (symbolp eieio-unbound)) eieio-unbound (make-symbol "unbound")))
                nil [3169 3367])
            ("eieio-default-superclass" variable nil nil [3474 3511])
            ("eieio--scoped-class-stack" variable nil nil [3872 3982])
            ("eieio--scoped-class" function nil nil [3984 4102])
            ("eieio--with-scoped-class" function (:arguments ("class" "forms")) nil [4104 4350])
            ("put" code nil nil [4351 4406])
            ("eieio--define-field-accessors" function (:arguments ("prefix" "fields")) nil [4434 5179])
            ("eieio--define-field-accessors" code nil nil [5181 6905])
            ("eieio--define-field-accessors" code nil nil [6907 7061])
            ("method-static" variable (:constant-flag t) nil [7133 7197])
            ("method-before" variable
               (:constant-flag t
                :default-value 1)
                nil [7198 7262])
            ("method-primary" variable
               (:constant-flag t
                :default-value 2)
                nil [7263 7329])
            ("method-after" variable
               (:constant-flag t
                :default-value 3)
                nil [7330 7392])
            ("method-num-lists" variable
               (:constant-flag t
                :default-value 4)
                nil [7393 7501])
            ("method-generic-before" variable
               (:constant-flag t
                :default-value 4)
                nil [7502 7582])
            ("method-generic-primary" variable
               (:constant-flag t
                :default-value 5)
                nil [7583 7665])
            ("method-generic-after" variable
               (:constant-flag t
                :default-value 6)
                nil [7666 7744])
            ("method-num-slots" variable
               (:constant-flag t
                :default-value 7)
                nil [7745 7818])
            ("eieio-specialized-key-to-generic-key" function (:arguments ("key")) nil [7820 8078])
            ("eieio--check-type" function (:arguments ("type" "obj")) nil [8132 8479])
            ("class-v" function (:arguments ("class")) nil [8481 8685])
            ("class-p" function (:arguments ("class")) nil [8687 8957])
            ("eieio-class-name" function (:arguments ("class")) nil [8959 9229])
            ("define-obsolete-function-alias" code nil nil [9230 9300])
            ("eieio-class-parents-fast" function (:arguments ("class")) nil [9302 9437])
            ("eieio-class-children-fast" function (:arguments ("class")) nil [9439 9574])
            ("same-class-fast-p" function (:arguments ("obj" "class")) nil [9576 9725])
            ("class-constructor" function (:arguments ("class")) nil [9727 9866])
            ("generic-p" function (:arguments ("method")) nil [9868 10141])
            ("generic-primary-only-p" function (:arguments ("method")) nil [10143 10836])
            ("generic-primary-only-one-p" function (:arguments ("method")) nil [10838 11535])
            ("class-option-assoc" function (:arguments ("list" "option")) nil [11537 11688])
            ("class-option" function (:arguments ("class" "option")) nil [11690 11889])
            ("eieio-object-p" function (:arguments ("obj")) nil [11891 12115])
            ("defalias" code nil nil [12116 12152])
            ("class-abstract-p" function (:arguments ("class")) nil [12154 12306])
            ("class-method-invocation-order" function (:arguments ("class")) nil [12308 12516])
            ("eieio-defclass-autoload-map" variable (:default-value (make-vector 7 nil)) nil [12544 12653])
            ("eieio-defclass-autoload" function (:arguments ("cname" "superclasses" "filename" "doc")) nil [12728 15240])
            ("eieio-class-un-autoload" function (:arguments ("cname")) nil [15242 15457])
            ("eieio-defclass" function (:arguments ("cname" "superclasses" "slots" "options-and-doc")) nil [15459 32450])
            ("eieio-eval-default-p" function (:arguments ("val")) nil [32452 32612])
            ("eieio-perform-slot-validation-for-default" function (:arguments ("slot" "spec" "value" "skipnil")) nil [32614 33028])
            ("eieio-add-new-slot" function (:arguments ("newc" "a" "d" "doc" "type" "cust" "label" "custg" "print" "prot" "init" "alloc" "defaultoverride" "skipnil")) nil [33030 42572])
            ("eieio-copy-parents-into-subclass" function (:arguments ("newc" "parents")) nil [42574 45018])
            ("eieio--defgeneric-init-form" function (:arguments ("method" "doc-string")) nil [45056 45621])
            ("eieio-defgeneric-form" function (:arguments ("method" "doc-string")) nil [45623 45961])
            ("eieio-defgeneric-reset-generic-form" function (:arguments ("method")) nil [45963 46167])
            ("eieio-defgeneric-form-primary-only" function (:arguments ("method" "doc-string")) nil [46169 46533])
            ("eieio-defgeneric-reset-generic-form-primary-only" function (:arguments ("method")) nil [46535 46765])
            ("eieio-defgeneric-form-primary-only-one" function (:arguments ("method" "doc-string" "class" "impl")) nil [46767 48886])
            ("eieio-defgeneric-reset-generic-form-primary-only-one" function (:arguments ("method")) nil [48888 49249])
            ("eieio-unbind-method-implementations" function (:arguments ("method")) nil [49251 49551])
            ("eieio--defmethod" function (:arguments ("method" "kind" "argclass" "code")) nil [49553 51536])
            ("eieio--typep" function (:arguments ("val" "type")) nil [51744 53278])
            ("eieio-perform-slot-validation" function (:arguments ("spec" "value")) nil [53280 53506])
            ("eieio-validate-slot-value" function (:arguments ("class" "slot-idx" "value" "slot")) nil [53508 54073])
            ("eieio-validate-class-slot-value" function (:arguments ("class" "slot-idx" "value" "slot")) nil [54075 54564])
            ("eieio-barf-if-slot-unbound" function (:arguments ("value" "instance" "slotname" "fn")) nil [54566 55004])
            ("eieio-oref" function (:arguments ("obj" "slot")) nil [55043 56070])
            ("eieio-oref-default" function (:arguments ("obj" "slot")) nil [56073 56963])
            ("eieio-default-eval-maybe" function (:arguments ("val")) nil [56965 57325])
            ("eieio-oset" function (:arguments ("obj" "slot" "value")) nil [57327 58247])
            ("eieio-oset-default" function (:arguments ("class" "slot" "value")) nil [58249 59281])
            ("eieio-slot-originating-class-p" function (:arguments ("start-class" "slot")) nil [59324 59830])
            ("eieio-slot-name-index" function (:arguments ("class" "obj" "slot")) nil [59832 61107])
            ("eieio-class-slot-name-index" function (:arguments ("class" "slot")) nil [61109 61732])
            ("eieio-set-defaults" function (:arguments ("obj" "set-all")) nil [61848 62418])
            ("eieio-initarg-to-attribute" function (:arguments ("class" "initarg")) nil [62420 62754])
            ("eieio-attribute-to-initarg" function (:arguments ("class" "attribute")) nil [62756 63054])
            ("eieio-c3-candidate" function (:arguments ("class" "remaining-inputs")) nil [63091 63531])
            ("eieio-c3-merge-lists" function (:arguments ("reversed-partial-result" "remaining-inputs")) nil [63533 64899])
            ("eieio-class-precedence-c3" function (:arguments ("class")) nil [64901 65243])
            ("eieio-class-precedence-dfs" function (:arguments ("class")) nil [65289 65825])
            ("eieio-class-precedence-bfs" function (:arguments ("class")) nil [65873 66365])
            ("eieio-class-precedence-list" function (:arguments ("class")) nil [66399 66916])
            ("define-obsolete-function-alias" code nil nil [66917 67010])
            ("eieio-generic-call-methodname" variable nil nil [67062 67175])
            ("eieio-generic-call-arglst" variable nil nil [67176 67284])
            ("eieio-generic-call-key" variable nil nil [67285 67465])
            ("eieio-generic-call-next-method-list" variable nil nil [67466 67711])
            ("define-obsolete-variable-alias" code nil nil [67713 67826])
            ("eieio-pre-method-execution-functions" variable nil nil [67827 68023])
            ("eieio-generic-call" function (:arguments ("method" "args")) nil [68025 73330])
            ("eieio-generic-call-primary-only" function (:arguments ("method" "args")) nil [73332 76103])
            ("eieiomt-method-list" function (:arguments ("method" "key" "class")) nil [76105 77273])
            ("eieiomt-optimizing-obarray" variable nil nil [78018 78124])
            ("eieiomt-install" function (:arguments ("method-name")) nil [78126 78738])
            ("eieiomt-add" function (:arguments ("method-name" "method" "key" "class")) nil [78740 80683])
            ("eieiomt-next" function (:arguments ("class")) nil [80685 81259])
            ("eieiomt-sym-optimize" function (:arguments ("s")) nil [81261 81890])
            ("eieio-generic-form" function (:arguments ("method" "key" "class")) nil [81892 83876])
            ("intern" code nil nil [83925 83956])
            ("put" code nil nil [83957 84032])
            ("put" code nil nil [84033 84098])
            ("intern" code nil nil [84100 84125])
            ("put" code nil nil [84126 84189])
            ("put" code nil nil [84190 84243])
            ("intern" code nil nil [84245 84273])
            ("put" code nil nil [84274 84343])
            ("put" code nil nil [84344 84403])
            ("intern" code nil nil [84405 84433])
            ("put" code nil nil [84434 84507])
            ("put" code nil nil [84508 84567])
            ("intern" code nil nil [84569 84592])
            ("put" code nil nil [84593 84656])
            ("put" code nil nil [84657 84706])
            ("intern" code nil nil [84708 84747])
            ("put" code nil nil [84748 84848])
            ("put" code nil nil [84849 84930])
            ("eieio-defmethod" function (:arguments ("method" "args")) nil [85044 87557])
            ("make-obsolete" code nil nil [87558 87615])
            ("eieio-defgeneric" function (:arguments ("method" "doc-string")) nil [87617 88400])
            ("make-obsolete" code nil nil [88401 88445])
            ("eieio-core" package nil nil [88447 88468]))          
      :file "eieio-core.el"
      :pointmax 88498
      :fsize 88497
      :lastmodtime '(20881 39619 0 0)
      :unmatched-syntax '((close-paren 1204 . 1205) (symbol 1173 . 1190) (open-paren 1172 . 1173))))
  :file "!home!revir!.emacs.d!cedet-bzr!trunk!lisp!eieio!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")

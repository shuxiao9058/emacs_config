;;; Automatically generated on Thu Jun  6 14:12:28 2013
;;; Invoked by jiya@jiya-arch using 24.3.1
(setq-default kill-ring '(#("/*********************************************************************
 * Filename:      hello.c
 * Copyright (C) 2013,  
 * Version:       
 * Author:        Allen Shaw <shuxiao9058#qq.com>
 * Created at:    Thu Jun  6 10:27:33 2013
 * Modified by:   Allen Shaw <shuxiao9058#qq.com>
 * Modified at:   Thu Jun  6 13:19:47 2013
 * Update count:  1
 * Description:   
 ********************************************************************/

int main()
{
    int a=2;
    int b=3;
    int c=a+b;

    int c = 2;
    int d = a + b + c;
   
}
" 0 1 (fontified t face font-lock-comment-delimiter-face c-in-sws t c-is-sws t) 1 70 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 70 434 (fontified t face font-lock-comment-face c-in-sws t) 434 436 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 436 438 (fontified t c-in-sws t) 438 439 (fontified t c-is-sws t face font-lock-type-face) 439 440 (fontified t face font-lock-type-face) 440 441 (fontified t c-type c-decl-id-start face font-lock-type-face) 441 442 (fontified t) 442 446 (fontified t face font-lock-function-name-face) 446 455 (fontified t) 455 457 (fontified t face font-lock-type-face) 457 458 (fontified t c-type c-decl-id-start face font-lock-type-face) 458 459 (fontified t) 459 460 (fontified t face font-lock-variable-name-face) 460 468 (fontified t) 468 470 (fontified t face font-lock-type-face) 470 471 (fontified t c-type c-decl-id-start face font-lock-type-face) 471 472 (fontified t) 472 473 (fontified t face font-lock-variable-name-face) 473 481 (fontified t) 481 483 (fontified t face font-lock-type-face) 483 484 (fontified t c-type c-decl-id-start face font-lock-type-face) 484 485 (fontified t) 485 486 (fontified t face font-lock-variable-name-face) 486 497 (fontified t) 497 499 (fontified t face font-lock-type-face) 499 500 (fontified t c-type c-decl-id-start face font-lock-type-face) 500 501 (fontified t) 501 502 (fontified t face font-lock-variable-name-face) 502 508 (fontified t) 508 512 (fontified t) 512 514 (fontified t face font-lock-type-face) 514 515 (fontified t c-type c-decl-id-start face font-lock-type-face) 515 516 (fontified t) 516 517 (fontified t face font-lock-variable-name-face) 517 537 (fontified t)) #("
" 0 1 (fontified t)) #(";; 粘贴于光标处,而不是鼠标指针处
(setq mouse-yank-at-point t)	
" 0 3 (fontified t face font-lock-comment-delimiter-face) 3 19 (fontified t face font-lock-comment-face) 19 49 (fontified t)) #(";; 不要在鼠标光标处插入
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 14 (face font-lock-comment-face fontified t)) #(";; 粘贴于光标处,而不是鼠标指针处
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 19 (face font-lock-comment-face fontified t)) #(";;鼠标指针避光标
(setq mouse-avoidance-mode 'animate)
" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 10 (fontified t face font-lock-comment-face) 10 47 (fontified t)) #(";; 光标靠近鼠标指针时，让鼠标指针自动离开
(mouse-avoidance-mode 'animate)
;; 不要在鼠标光标处插入
(setq mouse-yank-at-point t)
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 23 (face font-lock-comment-face fontified t) 23 55 (fontified t) 55 58 (face font-lock-comment-delimiter-face fontified t) 58 69 (face font-lock-comment-face fontified t) 69 98 (fontified t))))
(setq-default session-file-alist '(("~/hello.c" 75 1 1 nil nil 67 (overwrite-mode)) ("~/.emacs.d/my-base.el" 5652 2972 1 nil nil 4767 (overwrite-mode)) ("~/.emacs.d/init.el" 202 145 1 nil nil 202 (overwrite-mode)) ("~/emacs1/.emacs" 4339 4339 1 nil nil 4339 (overwrite-mode)) ("~/a.c" 74 nil 1 nil nil 74 (overwrite-mode)) ("~/test.cpp" 47 1 1 nil nil 50 (overwrite-mode))))
(setq-default file-name-history '("/usr/include/stdio.h" "/usr/include/c++/4.8.1/x86_64-unknown-linux-gnu/bits/c++config.h" "/usr/include/sys/cdefs.h" "/home/jiya/hello.c" "~/2013-06-06-131140_899x507_scrot.png" "/home/jiya/.emacs.d/my-base.el" "/home/jiya/.emacs.d/init.el" "~/.emacs.d/plugins/ecb/ecb-semantic-wrapper.el" "~/.emacs.d/plugins/ecb/ecb-semantic.el" "~/.emacs.d/plugins/ecb/ecb-common-browser.el" "/usr/share/emacs/24.3/lisp/wid-edit.el.gz" "~/.emacs.d/plugins/ecb/ecb-symboldef.el" "~/.emacs.d/plugins/ecb/ecb-analyse.el" "~/.emacs.d/plugins/ecb/ecb-compatibility.el" "~/.emacs.d/plugins/ecb/ecb-winman-support.el" "~/.emacs.d/plugins/ecb/ecb-autogen.el" "~/.emacs.d/plugins/ecb/ecb-speedbar.el" "~/.emacs.d/plugins/ecb/ecb-tod.el" "~/.emacs.d/plugins/ecb/ecb-face.el" "~/.emacs.d/plugins/ecb/ecb-cycle.el" "/usr/share/emacs/24.3/etc/THE-GNU-PROJECT" "~/.emacs.d/plugins/ecb/ecb-compilation.el" "~/.emacs.d/plugins/ecb/ecb-eshell.el" "~/.emacs.d/plugins/ecb/ecb-navigate.el" "~/.emacs.d/plugins/ecb/ecb-help.el" "/home/jiya/emacs1/.emacs" "~/.emacs.d/plugins/ecb/ecb-mode-line.el" "~/.emacs.d/plugins/ecb/ecb-create-layout.el" "~/.emacs.d/plugins/ecb/ecb-layout.el" "~/.emacs.d/plugins/ecb/ecb-jde.el" "~/.emacs.d/plugins/ecb/ecb-method-browser.el" "~/.emacs.d/plugins/ecb/ecb-file-browser.el" "~/.emacs.d/plugins/ecb/tree-buffer.el"))
(setq-default search-ring '("google" "auto-header" "au" "el-getsssss" "map" "src" "ac-comphist" "ac-comphistx" "complilation" "compli" "smart" "makefile" "run" "runner" "hook" "pos"))
(setq-default buffer-name-history '(#("hello.c" 0 7 (help-echo "Mouse-2 toggles maximizing, mouse-3 displays a popup-menu")) "*eshell*" "*scratch*" "*Compile-Log*" "*CEDET Global*" "*Messages*" "*info*" #("init.el" 0 7 (face \.\.\. help-echo "Mouse-2 toggles maximizing, mouse-3 displays a popup-menu")) " *Minibuf-1*" #("init.el" 0 7 (help-echo "Mouse-2 toggles maximizing, mouse-3 displays a popup-menu")) #(".emacs" 0 6 (help-echo "Mouse-2 toggles maximizing, mouse-3 displays a popup-menu")) #("my-base.el" 0 10 (help-echo "Mouse-2 toggles maximizing, mouse-3 displays a popup-menu")) "init.el" "a.c" "smart-operator.el" "my-base.el" "autopair.el"))
(setq-default command-history '((eshell nil) (execute-extended-command nil "eshell") (compile "gcc -g hello.c -lm -o hello" nil) (switch-to-buffer #("hello.c" 0 7 ...)) (switch-to-buffer "*eshell*") (testcover-this-defun) (execute-extended-command nil "testcover-this-defun") (find-file "/home/jiya/hello.c") (ecb-show-help nil) (execute-extended-command nil "ecb-show-help") (find-file "/home/jiya/.emacs.d/my-base.el") (find-file "/home/jiya/.emacs.d/init.el") (execute-extended-command nil "2C-command") (kill-buffer "*scratch*") (kill-buffer "*Compile-Log*") (kill-buffer "*CEDET Global*") (kill-buffer "*Messages*") (kill-buffer "*info*") (kill-buffer #("init.el" 0 7 ...)) (kill-buffer " *Minibuf-1*") (switch-to-buffer #("init.el" 0 7 ...))))
(setq-default compile-history '("gcc -g hello.c -lm -o hello"))
(setq-default extended-command-history '("eshell" "testcover-this-defun" "ecb-show-help" "2C-command" "git-status" "smart-operator-mode"))
(setq-default ido-buffer-history '(#("hello.c" 0 7 (help-echo "Mouse-2 toggles maximizing, mouse-3 displays a popup-menu")) "*eshell*" nil "*scratch*" "*Compile-Log*" "*CEDET Global*" "*Messages*" "*info*" #("init.el" 0 7 (face \.\.\. help-echo "Mouse-2 toggles maximizing, mouse-3 displays a popup-menu")) " *Minibuf-1*" #("init.el" 0 7 (help-echo "Mouse-2 toggles maximizing, mouse-3 displays a popup-menu")) #(".emacs" 0 6 (help-echo "Mouse-2 toggles maximizing, mouse-3 displays a popup-menu")) #("my-base.el" 0 10 (help-echo "Mouse-2 toggles maximizing, mouse-3 displays a popup-menu")) "init.el" "a.c" "smart-operator.el" "my-base.el" "autopair.el"))
(setq-default ido-file-history '("hello.c" "my-base.el" "init.el" ".emacs" "ac-comphist.dat" "a.c" "test.cpp" nil "smart-operator.el" "open-next-line.el" "autopair.el"))
(setq-default occur-collect-regexp-history '("\\1"))
(setq-default serial-name-history '("/dev/ttyS0"))
(setq-default serial-speed-history '("9600" "1200" "2400" "4800" "14400" "19200" "28800" "38400" "57600" "115200"))

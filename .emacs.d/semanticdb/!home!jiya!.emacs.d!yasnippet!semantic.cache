;; Object yasnippet/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "yasnippet/"
  :tables
  (list
    (semanticdb-table "yasnippet.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [5029 5042])
            ("easymenu" include nil nil [5043 5062])
            ("help-mode" include nil nil [5063 5083])
            ("yas-verbosity" variable nil nil [5295 5317])
            ("yas-selected-text" variable nil nil [5266 5292])
            ("yas-keymap" variable nil nil [5244 5263])
            ("yas--scheduled-jit-loads" variable nil nil [5208 5241])
            ("yas--indent-original-column" variable nil nil [5169 5205])
            ("yas--guessed-modes" variable nil nil [5139 5166])
            ("yas--editing-template" variable nil nil [5106 5136])
            ("yasnippet" customgroup (:user-visible-flag t) nil [5356 5432])
            ("yas--load-file-name" variable (:default-value load-file-name) nil [5434 5546])
            ("yas-snippet-dirs" variable (:default-value (remove nil (list "~/.emacs.d/snippets" (when yas--load-file-name (concat (file-name-directory yas--load-file-name) "snippets"))))) nil [5548 6717])
            ("yas-snippet-dirs" function nil nil [6719 6873])
            ("defvaralias" code nil nil [6875 6926])
            ("yas-prompt-functions" variable (:default-value (quote (yas-x-prompt yas-dropdown-prompt yas-completing-prompt yas-ido-prompt yas-no-prompt))) nil [6928 7930])
            ("yas-indent-line" variable (:default-value (quote auto)) nil [7932 8491])
            ("yas-also-auto-indent-first-line" variable nil nil [8493 8705])
            ("yas-snippet-revival" variable (:default-value t) nil [8707 8839])
            ("yas-triggers-in-field" variable nil nil [8841 9060])
            ("yas-fallback-behavior" variable (:default-value (quote call-other-command)) nil [9062 9729])
            ("yas-choose-keys-first" variable nil nil [9731 9986])
            ("yas-choose-tables-first" variable nil nil [9988 10288])
            ("yas-use-menu" variable (:default-value (quote abbreviate)) nil [10290 10953])
            ("yas-trigger-symbol" variable (:default-value (or (and (eq window-system (quote mac)) (ignore-errors (char-to-string 8677))) " =>")) nil [10955 11301])
            ("yas-wrap-around-region" variable nil nil [11303 11550])
            ("yas-good-grace" variable (:default-value t) nil [11552 11734])
            ("yas-visit-from-menu" variable nil nil [11736 11941])
            ("yas-expand-only-for-last-commands" variable nil nil [11943 12479])
            ("yas-field-highlight-face" variable
               (:default-value (quote ((t (:inherit (quote region)))))
                :type "face")
                nil [12545 12698])
            ("yas--field-debug-face" variable
               (:default-value (quote nil)
                :type "face")
                nil [12700 12819])
            ("yas-keymap" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map [(tab)] (quote yas-next-field-or-maybe-expand)) (define-key map (kbd "TAB") (quote yas-next-field-or-maybe-expand)) (define-key map [(shift tab)] (quote yas-prev-field)) (define-key map [backtab] (quote yas-prev-field)) (define-key map (kbd "C-g") (quote yas-abort-snippet)) (define-key map (kbd "C-d") (quote yas-skip-and-clear-or-delete-char)) map)) nil [12851 13464])
            ("yas-key-syntaxes" variable (:default-value (list "w" "w_" "w_." "w_.()" "^ ")) nil [13466 14074])
            ("yas-after-exit-snippet-hook" variable (:default-value (quote nil)) nil [14076 14430])
            ("yas-before-expand-snippet-hook" variable (:default-value (quote nil)) nil [14432 14527])
            ("yas-buffer-local-condition" variable (:default-value (quote (if (and (or (fourth (syntax-ppss)) (fifth (syntax-ppss))) this-command (eq this-command (quote yas-expand-from-trigger-key))) (quote (require-snippet-condition . force-in-comment)) t))) nil [14529 16537])
            ("yas--version" variable (:default-value "0.8.0beta") nil [16565 16598])
            ("yas--menu-table" variable (:default-value (make-hash-table)) nil [16600 16698])
            ("yas--known-modes" variable (:default-value (quote (ruby-mode rst-mode markdown-mode))) nil [16700 16825])
            ("yas--escaped-characters" variable (:default-value (quote (92 96 34 39 36 125 123 40 41))) nil [16827 16952])
            ("yas--field-regexp" variable
               (:constant-flag t
                :default-value "${\\([0-9]+:\\)?\\([^}]*\\)}")
                nil [16954 17059])
            ("yas--multi-dollar-lisp-expression-regexp" variable
               (:constant-flag t
                :default-value "$+[ 	
]*\\(([^)]*)\\)")
                nil [17061 17200])
            ("yas--backquote-lisp-expression-regexp" variable
               (:constant-flag t
                :default-value "`\\([^`]*\\)`")
                nil [17202 17331])
            ("yas--transform-mirror-regexp" variable
               (:constant-flag t
                :default-value "${\\(?:\\([0-9]+\\):\\)?$\\([ 	
]*([^}]*\\)")
                nil [17333 17484])
            ("yas--simple-mirror-regexp" variable
               (:constant-flag t
                :default-value "$\\([0-9]+\\)")
                nil [17486 17583])
            ("yas--snippet-id-seed" variable nil nil [17585 17656])
            ("yas--snippet-next-id" function nil nil [17658 17764])
            ("last-buffer-undo-list" variable nil nil [17867 17901])
            ("yas--minor-mode-menu" variable nil nil [17903 17966])
            ("yas--init-minor-keymap" function nil nil [17968 24025])
            ("yas-minor-mode-map" variable (:default-value (yas--init-minor-keymap)) nil [24027 24132])
            ("yas--tables" variable (:default-value (make-hash-table)) nil [24134 24230])
            ("yas--parents" variable (:default-value (make-hash-table)) nil [24232 24624])
            ("yas--direct-keymaps" variable (:default-value (list)) nil [24626 25132])
            ("yas-direct-keymaps-reload" function (:user-visible-flag t) nil [25134 25514])
            ("yas--modes-to-activate" function nil nil [25516 26052])
            ("yas-minor-mode-hook" variable nil nil [26054 26135])
            ("define-minor-mode" code nil nil [26152 27677])
            ("yas-dont-activate" variable (:default-value (quote (minibufferp))) nil [27679 28402])
            ("unless" code nil nil [28403 28488])
            ("yas-minor-mode-on" function (:user-visible-flag t) nil [28491 28890])
            ("define-globalized-minor-mode" code nil nil [28907 29028])
            ("yas--global-mode-reload-with-jit-maybe" function nil nil [29030 29176])
            ("add-hook" code nil nil [29178 29250])
            ("yas--font-lock-keywords" variable (:default-value (append (quote (("^#.*$" . font-lock-comment-face))) lisp-font-lock-keywords lisp-font-lock-keywords-1 lisp-font-lock-keywords-2 (quote (("$\\([0-9]+\\)" (0 font-lock-keyword-face) (1 font-lock-string-face t)) ("${\\([0-9]+\\):?" (0 font-lock-keyword-face) (1 font-lock-warning-face t)) ("${" font-lock-keyword-face) ("$[0-9]+?" font-lock-preprocessor-face) ("\\(\\$(\\)" 1 font-lock-preprocessor-face) ("}" (0 font-lock-keyword-face)))))) nil [29276 29900])
            ("yas--init-major-keymap" function nil nil [29902 30528])
            ("snippet-mode-map" variable (:default-value (yas--init-major-keymap)) nil [30530 30633])
            ("define-derived-mode" code nil nil [30636 30946])
            ("yas--template" type
               (:members ("key" "content" "name" "condition" "expand-env" "file" "keybinding" "uuid" "menu-binding-pair" "group" "perm-group" "table")
                :type "struct")
                nil [30997 31322])
            ("yas--populate-template" function (:arguments ("template" "args")) nil [31324 31702])
            ("yas--table" type
               (:members ("name" "hash" "uuidhash" "parents" "direct-keymap")
                :type "struct")
                nil [31704 32902])
            ("yas--get-template-by-uuid" function (:arguments ("mode" "uuid")) nil [32904 33117])
            ("yas--remove-template-by-uuid" function (:arguments ("table" "uuid")) nil [34984 36126])
            ("yas--add-template" function (:arguments ("table" "template")) nil [36128 37097])
            ("yas--update-template" function (:arguments ("table" "template")) nil [37099 37517])
            ("yas--update-template-menu" function (:arguments ("table" "template")) nil [37519 39467])
            ("yas--namehash-templates-alist" function (:arguments ("namehash")) nil [39469 39670])
            ("yas--fetch" function (:arguments ("table" "key")) nil [39672 40053])
            ("yas--eval-condition" function (:arguments ("condition")) nil [40088 40387])
            ("yas--filter-templates-by-condition" function (:arguments ("templates")) nil [40390 41051])
            ("yas--require-template-specific-condition-p" function nil nil [41053 41767])
            ("yas--template-can-expand-p" function (:arguments ("condition" "requirement")) nil [41769 42084])
            ("yas--all-parents" function (:arguments ("mode")) nil [42086 42282])
            ("yas--table-templates" function (:arguments ("table")) nil [42284 42645])
            ("yas--current-key" function nil nil [42647 43438])
            ("yas--table-all-keys" function (:arguments ("table")) nil [43441 43767])
            ("yas--table-mode" function (:arguments ("table")) nil [43769 43835])
            ("yas--real-mode?" function (:arguments ("mode")) nil [43875 44262])
            ("yas--eval-lisp" function (:arguments ("form")) nil [44264 45140])
            ("yas--eval-lisp-no-saves" function (:arguments ("form")) nil [45142 45435])
            ("yas--read-lisp" function (:arguments ("string" "nil-on-error")) nil [45437 45805])
            ("yas--read-keybinding" function (:arguments ("keybinding")) nil [45807 46365])
            ("yas-extra-modes" variable nil nil [46367 46609])
            ("yas-extra-modes" function nil nil [46610 46706])
            ("defvaralias" code nil nil [46707 46754])
            ("yas--table-get-create" function (:arguments ("mode")) nil [46756 47195])
            ("yas--get-snippet-tables" function nil nil [47197 47539])
            ("yas--menu-keymap-get-create" function (:arguments ("mode" "parents")) nil [47541 48122])
            ("yas--called-interactively-p" function (:arguments ("kind")) nil [48125 48438])
            ("yas--call-with-temporary-redefinitions" function (:arguments ("function" "function-names-and-overriding-functions")) nil [48441 49495])
            ("yas--with-temporary-redefinitions" function (:arguments ("fdefinitions" "body")) nil [49498 50071])
            ("put" code nil nil [50073 50137])
            ("put" code nil nil [50138 50237])
            ("yas--parse-template" function (:arguments ("file")) nil [50293 53399])
            ("yas--calculate-group" function (:arguments ("file")) nil [53401 54269])
            ("yas--subdirs" function (:arguments ("directory" "filep")) nil [54271 54894])
            ("yas--make-menu-binding" function (:arguments ("template")) nil [54896 55105])
            ("yas--expand-or-visit-from-menu" function (:arguments ("mode" "uuid")) nil [55107 55850])
            ("yas--x-pretty-prompt-templates" variable nil nil [55893 55999])
            ("yas--prompt-for-template" function (:arguments ("templates" "prompt")) nil [56002 56740])
            ("yas--prompt-for-keys" function (:arguments ("keys" "prompt")) nil [56742 57036])
            ("yas--prompt-for-table" function (:arguments ("tables" "prompt")) nil [57038 57400])
            ("yas-x-prompt" function (:arguments ("prompt" "choices" "display-fn")) nil [57402 58721])
            ("yas--x-pretty-prompt-templates" function (:arguments ("prompt" "templates")) nil [58723 60080])
            ("yas-ido-prompt" function (:arguments ("prompt" "choices" "display-fn")) nil [60082 60315])
            ("dropdown-list" include nil nil [60336 60366])
            ("yas-dropdown-prompt" function (:arguments ("prompt" "choices" "display-fn")) nil [60368 60928])
            ("yas-completing-prompt" function (:arguments ("prompt" "choices" "display-fn" "completion-fn")) nil [60930 61879])
            ("yas-no-prompt" function (:arguments ("prompt" "choices" "display-fn")) nil [61881 61958])
            ("yas--define-snippets-1" function (:arguments ("snippet" "snippet-table")) nil [62083 63659])
            ("yas-define-snippets" function (:arguments ("mode" "snippets")) nil [63661 64745])
            ("yas--load-yas-setup-file" function (:arguments ("file")) nil [64782 64844])
            ("yas--define-parents" function (:arguments ("mode" "parents")) nil [64846 65083])
            ("yas-load-directory" function
               (:user-visible-flag t
                :arguments ("top-level-dir" "use-jit"))
                nil [65085 67063])
            ("yas--load-directory-1" function (:arguments ("directory" "mode-sym" "parents" "no-compiled-snippets")) nil [67065 67617])
            ("yas--load-directory-2" function (:arguments ("directory" "mode-sym")) nil [67619 68424])
            ("yas--load-snippet-dirs" function (:arguments ("nojit")) nil [68426 69137])
            ("yas-reload-all" function
               (:user-visible-flag t
                :arguments ("interactive"))
                nil [69139 71492])
            ("yas--load-pending-jits" function nil nil [71494 71876])
            ("yas--quote-string" function (:arguments ("string")) nil [71987 72289])
            ("yas--initialize" function nil nil [72326 72440])
            ("yas-compile-directory" function
               (:user-visible-flag t
                :arguments ("top-level-dir"))
                nil [72442 74590])
            ("yas-recompile-all" function (:user-visible-flag t) nil [74592 74733])
            ("yas--scheduled-jit-loads" variable (:default-value (make-hash-table)) nil [74757 74888])
            ("yas--schedule-jit" function (:arguments ("mode" "form")) nil [74890 75060])
            ("yas-about" function nil nil [75096 75295])
            ("yas--template-menu-binding-pair-get-create" function (:arguments ("template" "type")) nil [76698 77400])
            ("yas--template-menu-managed-by-yas-define-menu" function (:arguments ("template")) nil [77401 77595])
            ("yas--show-menu-p" function (:arguments ("mode")) nil [77598 77920])
            ("yas--delete-from-keymap" function (:arguments ("keymap" "uuid")) nil [77922 78889])
            ("yas-define-menu" function (:arguments ("mode" "menu" "omit-items")) nil [78891 80426])
            ("yas--define-menu-1" function (:arguments ("table" "menu-keymap" "menu" "uuidhash" "group-list")) nil [80428 81924])
            ("yas--define" function (:arguments ("mode" "key" "template" "name" "condition" "group")) nil [81927 82402])
            ("yas-hippie-try-expand" function (:arguments ("first-time?")) nil [82404 82695])
            ("yas--condition-cache-timestamp" variable nil nil [82743 82786])
            ("yas-define-condition-cache" function (:arguments ("func" "doc" "body")) nil [82787 83817])
            ("defalias" code nil nil [83819 83870])
            ("yas-expand-from-trigger-key" function
               (:user-visible-flag t
                :arguments ("field"))
                nil [83871 85091])
            ("yas-expand-from-keymap" function (:user-visible-flag t) nil [85093 85897])
            ("yas--expand-or-prompt-for-template" function (:arguments ("templates" "start" "end")) nil [85899 86646])
            ("yas--fallback" function (:arguments ("from-trigger-key-p")) nil [86942 88139])
            ("yas--keybinding-beyond-yasnippet" function nil nil [88141 88402])
            ("yas--fallback-translate-input" function (:arguments ("keys")) nil [88404 89371])
            ("yas--all-templates" function (:arguments ("tables")) nil [89411 90148])
            ("yas-insert-snippet" function
               (:user-visible-flag t
                :arguments ("no-condition"))
                nil [90150 91455])
            ("yas-visit-snippet-file" function (:user-visible-flag t) nil [91457 92206])
            ("yas--visit-snippet-file-1" function (:arguments ("template")) nil [92208 93764])
            ("yas--guess-snippet-directories-1" function (:arguments ("table")) nil [93766 94065])
            ("yas--guess-snippet-directories" function (:arguments ("table")) nil [94067 95179])
            ("yas--make-directory-maybe" function (:arguments ("table-and-dirs" "main-table-string")) nil [95181 96291])
            ("yas-new-snippet" function
               (:user-visible-flag t
                :arguments ("no-template"))
                nil [96293 97244])
            ("yas--compute-major-mode-and-parents" function (:arguments ("file")) nil [97246 98896])
            ("yas--editing-template" variable nil nil [98898 99012])
            ("yas--current-template" variable nil nil [99014 99110])
            ("yas--guessed-modes" variable nil nil [99112 99207])
            ("yas--read-table" function nil nil [99209 100065])
            ("yas-load-snippet-buffer" function
               (:user-visible-flag t
                :arguments ("table" "interactive"))
                nil [100067 103089])
            ("yas-tryout-snippet" function
               (:user-visible-flag t
                :arguments ("debug"))
                nil [103091 105131])
            ("yas-active-keys" function nil nil [105133 105351])
            ("yas--template-fine-group" function (:arguments ("template")) nil [105353 105500])
            ("yas-describe-tables" function
               (:user-visible-flag t
                :arguments ("choose"))
                nil [105502 107895])
            ("yas--describe-pretty-table" function (:arguments ("table" "original-buffer")) nil [107897 110492])
            ("yas-modified-p" variable nil nil [110563 110656])
            ("yas-moving-away-p" variable nil nil [110658 110732])
            ("yas-text" variable nil nil [110734 110788])
            ("yas-substr" function (:arguments ("str" "pattern" "subexp")) nil [110790 111157])
            ("yas-choose-value" function (:arguments ("possibilities")) nil [111159 111740])
            ("yas-key-to-value" function (:arguments ("alist")) nil [111742 111984])
            ("yas-throw" function (:arguments ("text")) nil [111986 112116])
            ("yas-verify-value" function (:arguments ("possibilities")) nil [112118 112410])
            ("yas-field-value" function (:arguments ("number")) nil [112412 112747])
            ("yas-text" function nil nil [112749 112909])
            ("yas-selected-text" function nil nil [112911 113116])
            ("yas--get-field-once" function (:arguments ("number" "transform-fn")) nil [113118 113312])
            ("yas-default-from-field" function (:arguments ("number")) nil [113314 113408])
            ("yas-inside-string" function nil nil [113410 113585])
            ("yas-unimplemented" function (:arguments ("missing-feature")) nil [113587 114008])
            ("yas--active-field-overlay" variable nil nil [114056 114135])
            ("yas--field-protection-overlays" variable nil nil [114137 114231])
            ("yas--prefix" variable (:constant-flag t) nil [114233 114320])
            ("yas-selected-text" variable nil nil [114322 114415])
            ("yas--start-column" variable nil nil [114417 114499])
            ("make-variable-buffer-local" code nil nil [114501 114556])
            ("make-variable-buffer-local" code nil nil [114557 114617])
            ("put" code nil nil [114618 114669])
            ("put" code nil nil [114670 114726])
            ("yas--snippet" type
               (:members ("fields" "exit" "id" "control-overlay" "active-field" "previous-active-field" "force-exit")
                :type "struct")
                nil [114728 115079])
            ("yas--field" type
               (:members ("number" "start" "end" "parent-field" "mirrors" "transform" "modified-p" "next")
                :type "struct")
                nil [115081 115637])
            ("yas--mirror" type
               (:members ("start" "end" "transform" "parent-field" "next" "depth")
                :type "struct")
                nil [115640 116096])
            ("yas--exit" type
               (:members ("marker" "next")
                :type "struct")
                nil [116098 116176])
            ("yas--apply-transform" function (:arguments ("field-or-mirror" "field" "empty-on-nil-p")) nil [116178 117291])
            ("yas--replace-all" function (:arguments ("from" "to" "text")) nil [117293 117618])
            ("yas--snippet-find-field" function (:arguments ("snippet" "number")) nil [117620 117793])
            ("yas--snippet-sort-fields" function (:arguments ("snippet")) nil [117795 118016])
            ("yas--snippet-field-compare" function (:arguments ("field1" "field2")) nil [118018 118596])
            ("yas--field-probably-deleted-p" function (:arguments ("snippet" "field")) nil [118598 119313])
            ("yas--snippets-at-point" function (:arguments ("all-snippets")) nil [119315 119942])
            ("yas-next-field-or-maybe-expand" function (:user-visible-flag t) nil [119944 120391])
            ("yas-next-field" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [120393 121898])
            ("yas--place-overlays" function (:arguments ("snippet" "field")) nil [121900 122106])
            ("yas--move-to-field" function (:arguments ("snippet" "field")) nil [122108 123024])
            ("yas-prev-field" function (:user-visible-flag t) nil [123026 123153])
            ("yas-abort-snippet" function (:arguments ("snippet")) nil [123155 123369])
            ("yas-exit-snippet" function
               (:user-visible-flag t
                :arguments ("snippet"))
                nil [123371 123743])
            ("yas-exit-all-snippets" function (:user-visible-flag t) nil [123745 123972])
            ("yas--inhibit-overlay-hooks" function (:arguments ("body")) nil [124014 124206])
            ("yas-snippet-beg" variable nil nil [124208 124288])
            ("yas-snippet-end" variable nil nil [124289 124363])
            ("yas--commit-snippet" function (:arguments ("snippet")) nil [124365 126001])
            ("yas--safely-run-hooks" function (:arguments ("hook-var")) nil [126003 126182])
            ("yas--check-commit-snippet" function nil nil [126185 127678])
            ("yas--markers-to-points" function (:arguments ("snippet")) nil [128155 129521])
            ("yas--points-to-markers" function (:arguments ("snippet")) nil [129523 130684])
            ("yas--field-contains-point-p" function (:arguments ("field" "point")) nil [130686 130890])
            ("yas--field-text-for-display" function (:arguments ("field")) nil [130892 131061])
            ("yas--undo-in-progress" function nil nil [131063 131225])
            ("yas--make-control-overlay" function (:arguments ("snippet" "start" "end")) nil [131227 131685])
            ("yas-skip-and-clear-or-delete-char" function
               (:user-visible-flag t
                :arguments ("field"))
                nil [131687 132394])
            ("yas--skip-and-clear" function (:arguments ("field")) nil [132396 132840])
            ("yas--mark-this-and-children-modified" function (:arguments ("field")) nil [132842 133223])
            ("yas--make-move-active-field-overlay" function (:arguments ("snippet" "field")) nil [133225 134332])
            ("yas--inhibit-overlay-hooks" variable nil nil [134334 134455])
            ("yas--on-field-overlay-modification" function (:arguments ("overlay" "after?" "beg" "end" "length")) nil [134457 135661])
            ("yas--make-move-field-protection-overlays" function (:arguments ("snippet" "field")) nil [136412 137892])
            ("yas--protection-violation" variable nil nil [137894 138195])
            ("yas--on-protection-overlay-modification" function (:arguments ("overlay" "after?" "beg" "end" "length")) nil [138197 138603])
            ("add-to-list" code nil nil [138605 138668])
            ("yas-expand-snippet" function (:arguments ("content" "start" "end" "expand-env")) nil [139802 144679])
            ("yas--take-care-of-redo" function (:arguments ("beg" "end" "snippet")) nil [144681 145011])
            ("yas--snippet-revive" function (:arguments ("beg" "end" "snippet")) nil [145013 146060])
            ("yas--snippet-create" function (:arguments ("begin" "end")) nil [146062 146605])
            ("yas--fom-start" function (:arguments ("fom")) nil [147378 147575])
            ("yas--fom-end" function (:arguments ("fom")) nil [147577 147768])
            ("yas--fom-next" function (:arguments ("fom")) nil [147770 147962])
            ("yas--fom-parent-field" function (:arguments ("fom")) nil [147964 148163])
            ("yas--calculate-adjacencies" function (:arguments ("snippet")) nil [148165 149691])
            ("yas--calculate-mirrors-in-fields" function (:arguments ("snippet" "mirror")) nil [149693 150454])
            ("yas--advance-end-maybe" function (:arguments ("fom" "newend")) nil [150456 151191])
            ("yas--advance-start-maybe" function (:arguments ("fom" "newstart")) nil [151193 151496])
            ("yas--advance-end-of-parents-maybe" function (:arguments ("field" "newend")) nil [151498 151931])
            ("yas--dollar-regions" variable nil nil [151933 152055])
            ("yas--backquote-markers-and-strings" variable nil nil [152057 152236])
            ("yas--snippet-parse-create" function (:arguments ("snippet")) nil [152238 153663])
            ("yas--indent-according-to-mode" function (:arguments ("snippet-markers")) nil [153665 155185])
            ("yas--indent-original-column" variable nil nil [155187 155227])
            ("yas--indent" function (:arguments ("snippet")) nil [155228 156499])
            ("yas--collect-snippet-markers" function (:arguments ("snippet")) nil [156501 157126])
            ("yas--real-line-beginning" function nil nil [157128 157361])
            ("yas--escape-string" function (:arguments ("escaped")) nil [157363 157459])
            ("yas--protect-escapes" function (:arguments ("text" "escaped")) nil [157461 158051])
            ("yas--restore-escapes" function (:arguments ("text" "escaped")) nil [158053 158633])
            ("yas--save-backquotes" function nil nil [158635 159398])
            ("yas--restore-backquotes" function nil nil [159400 159875])
            ("yas--scan-sexps" function (:arguments ("from" "count")) nil [159877 160039])
            ("yas--make-marker" function (:arguments ("pos")) nil [160041 160236])
            ("yas--field-parse-create" function (:arguments ("snippet" "parent-field")) nil [160238 164182])
            ("yas--transform-mirror-parse-create" function (:arguments ("snippet")) nil [164184 165439])
            ("yas--simple-mirror-parse-create" function (:arguments ("snippet")) nil [165441 167416])
            ("yas--delete-regions" function (:arguments ("regions")) nil [167418 167694])
            ("yas--calculate-mirror-depth" function (:arguments ("mirror" "traversed")) nil [167696 168621])
            ("yas--update-mirrors" function (:arguments ("snippet")) nil [168623 170725])
            ("yas--mirror-update-display" function (:arguments ("mirror" "field")) nil [170727 171862])
            ("yas--field-update-display" function (:arguments ("field" "snippet")) nil [171864 172813])
            ("yas--post-command-handler" function nil nil [172843 174038])
            ("put" code nil nil [174155 174238])
            ("yas--expand-from-trigger-key-doc" function nil nil [174239 175140])
            ("put" code nil nil [175142 175227])
            ("yas--expand-from-keymap-doc" function nil nil [175228 176365])
            ("yas--template-pretty-list" function (:arguments ("templates")) nil [176367 176687])
            ("define-button-type" code nil nil [176689 176892])
            ("yas--snippet-description-finish-runonce" function nil nil [176894 177125])
            ("yas--create-snippet-xrefs" function nil nil [177127 177606])
            ("yas--expand-uuid" function (:arguments ("mode-symbol" "uuid" "start" "end" "expand-env")) nil [177608 178075])
            ("yas-verbosity" variable (:default-value 4) nil [178089 178192])
            ("yas--message" function (:arguments ("level" "message" "args")) nil [178194 178397])
            ("yas--format" function (:arguments ("format-control" "format-args")) nil [178399 178517])
            ("unless" code nil nil [178655 181539])
            ("c-neutralize-syntax-in-CPP" function (:arguments ("around" "yas--mp/c-neutralize-syntax-in-CPP" "activate")) nil [181977 182301])
            ("add-hook" code nil nil [182356 182579])
            ("yas--exported-syms" variable (:default-value (quote (yas-snippet-dirs yas-prompt-functions yas-indent-line yas-also-auto-indent-first-line yas-snippet-revival yas-triggers-in-field yas-fallback-behavior yas-choose-keys-first yas-choose-tables-first yas-use-menu yas-trigger-symbol yas-wrap-around-region yas-good-grace yas-visit-from-menu yas-expand-only-for-last-commands yas-field-highlight-face yas-keymap yas-verbosity yas-extra-modes yas-key-syntaxes yas-after-exit-snippet-hook yas-before-expand-snippet-hook yas-buffer-local-condition yas-dont-activate yas-x-prompt yas-ido-prompt yas-no-prompt yas-completing-prompt yas-dropdown-prompt yas-expand yas-minor-mode yas-global-mode yas-direct-keymaps-reload yas-minor-mode-on yas-load-directory yas-reload-all yas-compile-directory yas-recompile-all yas-about yas-expand-from-trigger-key yas-expand-from-keymap yas-insert-snippet yas-visit-snippet-file yas-new-snippet yas-load-snippet-buffer yas-tryout-snippet yas-describe-tables yas-next-field-or-maybe-expand yas-next-field yas-prev-field yas-abort-snippet yas-exit-snippet yas-exit-all-snippets yas-skip-and-clear-or-delete-char yas-expand-snippet yas-define-snippets yas-define-menu yas-snippet-beg yas-snippet-end yas-modified-p yas-moving-away-p yas-text yas-substr yas-choose-value yas-key-to-value yas-throw yas-verify-value yas-field-value yas-text yas-selected-text yas-default-from-field yas-inside-string yas-unimplemented yas-define-condition-cache yas-hippie-try-expand yas-active-keys))) nil [182630 187642])
            ("yas--dont-backport" variable (:default-value (quote (yas-active-keys))) nil [187644 187754])
            ("dolist" code nil nil [187756 188148])
            ("yasnippet" package nil nil [188152 188172]))          
      :file "yasnippet.el"
      :pointmax 188291
      :fsize 188292
      :lastmodtime '(20909 56999 188359 463000)
      :unmatched-syntax '((close-paren 60366 . 60367) (symbol 60318 . 60335) (open-paren 60317 . 60318) (close-paren 5317 . 5318) (symbol 5086 . 5103) (open-paren 5085 . 5086)))
    (semanticdb-table "dropdown-list.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [2161 2174])
            ("dropdown-list-face" variable
               (:user-visible-flag t
                :default-value (quote ((t :inherit default :background "lightyellow" :foreground "black")))
                :type "face")
                nil [2250 2382])
            ("dropdown-list-selection-face" variable
               (:user-visible-flag t
                :default-value (quote ((t :inherit dropdown-list-face :background "purple")))
                :type "face")
                nil [2384 2512])
            ("dropdown-list-overlays" variable nil nil [2514 2549])
            ("dropdown-list-hide" function nil nil [2551 2663])
            ("dropdown-list-put-overlay" function (:arguments ("beg" "end" "prop" "value" "prop2" "value2")) nil [2665 2917])
            ("dropdown-list-line" function (:arguments ("start" "replacement" "no-insert")) nil [2919 4402])
            ("dropdown-list-start-column" function (:arguments ("display-width")) nil [4404 4739])
            ("dropdown-list-move-to-start-line" function (:arguments ("candidate-count")) nil [4741 5336])
            ("dropdown-list-at-point" function (:arguments ("candidates" "selidx")) nil [5338 6709])
            ("dropdown-list" function (:arguments ("candidates")) nil [6711 8578])
            ("define-key*" function (:arguments ("keymap" "key" "command")) nil [8580 8825])
            ("combine-command" function (:arguments ("command" "defs")) nil [8827 9353])
            ("command-selector-last-command" variable nil nil [9355 9427])
            ("command-selector" function (:arguments ("candidates")) nil [9429 10320])
            ("dropdown-list" package nil nil [10344 10368]))          
      :file "dropdown-list.el"
      :pointmax 10562
      :fsize 10563
      :lastmodtime '(20909 56999 151692 995000)
      :unmatched-syntax '((close-paren 2174 . 2175) (symbol 2143 . 2160) (open-paren 2142 . 2143))))
  :file "!home!jiya!.emacs.d!yasnippet!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
